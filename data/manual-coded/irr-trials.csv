,transcript,choices,response,rt_s,ben_annotation,ced_annotation
0," 1, 4, 7, 4, 12. 1, 4, 7, 4, 12. 1, 4, 7, 4, 12. 1, 4, 7, 4, 12. 4 plus 7, 4, 12. It's pretty simple. Okay, 1 plus 7 is 8. Plus 16. Plus 16. Okay, yeah, 8 plus 6 is 24 1 plus 7 plus Yeah, plus Should be 24 all day long","[1,4,7,12]",(1+7)+(12+4),90,"start_state = (1, 4, 7, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+7=11"",
    resulting_state=(1, 11, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+7=8"",
    resulting_state=(4, 8, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12+4=16"",
    resulting_state=(8, 16),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+16=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 4, 7, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(1+7)+(4+12)=24"",
    resulting_state=(24,),
    comment="""",
)"
1," Okay, I have 1, 1, 5, 6. Target number is 24. Can't add straight across. I already know that's not going to be big enough. Maybe I could do 1 plus 1, 2. Okay, I think I have an idea. I could do 6, 12. No, never mind. I was thinking I could do 1 plus 1, which is 2, and then subtracting that from 5 to make 3, but 6 times 3 is 18, not 24, so that's not going to work. I can't do 6 divided by 2 because that would be 3. 3 times 5 is 15. That's not going to work either. 5 times 1 is 5. Okay. No. 5 plus 1 is 6. 6 times 6 is 36. Nope. Okay. What about 1 plus 6? 1 plus 6 is 7. 7 times 5 is way too big, so I can't do that. 1 plus 1 is 2. 1 plus 5 is 6. I can't do... 5 minus 6, 12. Wait, I think I have an idea. Okay. 5 minus 1. That's 4. And then I'm going to times that by 6, and then times that by 1. 4 times 6 is 24 times 1. 4 times 6 is 24 times 1.","[1,1,5,6]",(5-1)x6x1,105,"start_state = (1, 1, 5, 6)
curr_state = start_state
graph = GraphBuilder(curr_state)

# I'm not counting adding them all up as exploring operations, since it looks like they're using
# a heuristic rather than actually doing the calculations

new_state = graph.explore_operation(
    curr_state,
    operation=""1+1=2"",
    resulting_state=(2, 5, 6),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*2=12"",
    resulting_state=(5, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5-2=3"",
    resulting_state=(3, 6),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*3=18"",
    resulting_state=(18,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6/(1+1)=3"",
    resulting_state=(3, 5),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*5=15"",
    resulting_state=(15,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5*1=5"",
    resulting_state=(1, 5, 6),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+1=6"",
    resulting_state=(1, 6, 6),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*6=36"",
    resulting_state=(1, 36),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""1+6=7"",
    resulting_state=(1, 5, 7),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*5=35"",
    resulting_state=(1, 35),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""1+1=2"",
    resulting_state=(2, 5, 6),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+5=6"",
    resulting_state=(1, 6, 6),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5-6=-1"",
    resulting_state=(1, 1, -1),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(5-1)*6*1=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 1, 5, 6)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+1+5+6=13"",
    resulting_state=(13,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+1=2"",
    resulting_state=(2, 5, 6),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*2=12"",
    resulting_state=(12, 5),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+1=2"",
    resulting_state=(2, 5, 6),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(5-2)*6=18"",
    resulting_state=(18,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(6/2)*5=15"",
    resulting_state=(15,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*1=5"",
    resulting_state=(1, 5, 6),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+1=6"",
    resulting_state=(6, 1, 6),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*6=36"",
    resulting_state=(36, 1),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+6=7"",
    resulting_state=(7, 1, 5),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*5=35"",
    resulting_state=(35, 1),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+1=2"",
    resulting_state=(2, 5, 6),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+5=6"",
    resulting_state=(6, 1, 6),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5-6=-1"",
    resulting_state=(1, 1, -1),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+5+6=12"",
    resulting_state=(1, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5-1=4"",
    resulting_state=(4, 1, 6),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*6*1=24"",
    resulting_state=(24,),
    comment="""",
)"
2," So target number is 24. We have 3, 3, 11, 12. Uh, Westminster! 3, 3, 11, 12. 12 plus 11 is 23. So that doesn't work. 3 times 12 is 36. 36 minus 11 is 25. So then that doesn't work with the other 3. Um, 3 times 3 equals 9. 9 plus 12 equals 21. We still have the 11. 12 divided by 3 equals 4. 4 times 3 equals 12. 12 plus 11 equals 23. Still not there. Oh, 12 plus 11 equals 23. Plus 3 divided by 3, which equals 1, which gets to 24.","[3,3,11,12]",12+11+(3/3),80,"start_state = (3, 3, 11, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+11=23"",
    resulting_state=(3, 3, 23),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*12=36"",
    resulting_state=(3, 11, 36),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""36-11=25"",
    resulting_state=(3, 25),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(9, 11, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+12=21"",
    resulting_state=(11, 21),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(12/3)*3=12"",
    resulting_state=(11, 12),
    result_calc_error=False,
    comment='""""',
)


new_state = graph.explore_operation(
    curr_state,
    operation=""12+11=23"",
    resulting_state=(3, 3, 23),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""23+(3/3)=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (3, 3, 11, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+11=23"",
    resulting_state=(3, 3, 23),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*12=36"",
    resulting_state=(36, 3, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""36-11=25"",
    resulting_state=(25, 3),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(9, 11, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+12=21"",
    resulting_state=(21, 11),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12/3=4"",
    resulting_state=(4, 3, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*3=12"",
    resulting_state=(12, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+11=23"",
    resulting_state=(23,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+11=23"",
    resulting_state=(3, 3, 23),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""23+(3/3)=24"",
    resulting_state=(24,),
    comment="""",
)"
3," Alright, 11, 19, 32. So, 11 plus 13 is 24. Nope. 19, 32. Jesus. 5 times... 11, 19, 32. 3 times 5? No. 7 times 8 is 56. 7 times 8 is 56. No. 52. No. 56 minus 17. 13 times 4 is 52. Minus 15. 15. 21. Okay. 13 plus 8. Plus 7 minus 4.","[4,7,8,13]",13+8+(7-4),126,"start_state = (4, 7, 8, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+7+8+13=32"",
    resulting_state=(32,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(7+4)+13=24"",
    resulting_state=(8, 24),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+7+8=19"",
    resulting_state=(13, 19),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""19+13=32"",
    resulting_state=(32,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(13-8)*(7-4)=15"",
    resulting_state=(15,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*8=56"",
    resulting_state=(4, 13, 56),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""56-(13+4)=39"",
    resulting_state=(39,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13*4=52"",
    resulting_state=(7, 8, 52),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""52-(7+8)=37"",
    resulting_state=(37,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13+8+(7-4)=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (4, 7, 8, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+7=11"",
    resulting_state=(11, 8, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+8=19"",
    resulting_state=(19, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""19+13=32"",
    resulting_state=(32,),
    comment="""",
)

curr_state = graph.move_to_node((11, 8, 13))

new_state = graph.explore_operation(
    curr_state,
    operation=""11+13=24"",
    resulting_state=(24, 8),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+8=19"",
    resulting_state=(19, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""19+13=32"",
    resulting_state=(32,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(7-4)*(13-8)=15"",
    resulting_state=(15,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*8=56"",
    resulting_state=(4, 56, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*4=52"",
    resulting_state=(52, 7, 8),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(7*8)-(13+4)=39"",
    resulting_state=(39,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*4=52"",
    resulting_state=(52, 7, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""52-(7+8)=37"",
    resulting_state=(37,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+8=15"",
    resulting_state=(4, 15, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+13=21"",
    resulting_state=(4, 7, 21),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""21+7-4=24"",
    resulting_state=(24,),
    comment="""",
)"
4," 9, 11, 12, 13. So, let's see. I don't want to... 2, 24. 13 minus 1, 11. 2. 2, 12 minus 3. No. Let's see. So, 13 minus 9 is 4. No. Let's see. 12 minus 9, 3. Times 11, 33. Minus 13 is only 20. No. 11 minus 9 is 2. Times 13, 26. Minus 12. No. 11 plus 13 12 plus 9 okay 21 no 21 see 12 plus 9 is 21 let's see let's do 23 no wait 9 plus 13 minus 1 plus 1 9 plus 13 minus 1 plus 1 plus 1 still 23 20 21 let's see","[9,11,12,13]",,180,"start_state = (9, 11, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-11=2"",
    resulting_state=(2, 9, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-9=3"",
    resulting_state=(3, 11, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-9=4"",
    resulting_state=(4, 11, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-9=3"",
    resulting_state=(3, 11, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*11=33"",
    resulting_state=(13, 33),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""33-13=20"",
    resulting_state=(20,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11-9=2"",
    resulting_state=(2, 12, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""2*13=26"",
    resulting_state=(12, 26),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""26-12=14"",
    resulting_state=(14,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+13=24"",
    resulting_state=(9, 12, 24),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+9=21"",
    resulting_state=(11, 13, 21),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+13=22"",
    resulting_state=(11, 12, 22),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""22-12+11=21"",
    resulting_state=(21,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""22+12-11=23"",
    resulting_state=(23,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+11=20"",
    resulting_state=(12, 13, 20),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+12=21"",
    resulting_state=(11, 13, 21),
    result_calc_error=False,
    comment='""""',
)","start_state = (9, 11, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-9=2"",
    resulting_state=(2, 12, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*12=24"",
    resulting_state=(24, 13),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-(12-11)=12"",
    resulting_state=(9, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-9=2"",
    resulting_state=(2, 12, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-(13-9)=9"",
    resulting_state=(9, 11),
    result_calc_error=True,
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-9=4"",
    resulting_state=(4, 11, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-9=3"",
    resulting_state=(3, 11, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*11=33"",
    resulting_state=(33, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""33-13=20"",
    resulting_state=(20,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-9=2"",
    resulting_state=(2, 12, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*13=26"",
    resulting_state=(26, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""26-12=14"",
    resulting_state=(14,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+13=24"",
    resulting_state=(9, 24, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+9=21"",
    resulting_state=(21, 11, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""21+(13-11)=23"",
    resulting_state=(23,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+12=21"",
    resulting_state=(21, 11, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""21+(13-11)=23"",
    resulting_state=(23,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+13=22"",
    resulting_state=(22, 11, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""22-(12-11)=21"",
    resulting_state=(21,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""22+(12-11)=23"",
    resulting_state=(23,),
    comment="""",
)"
5," 13 plus 12 is 25. 25. That won't work. Okay, so let's try. Let's try 6 times 12. 12. 24. 36. 36 plus 36. That's 72. Yeah, no, it's not going to work. How about... Hmm. This? This one is getting me. Let's see. If we did 12 times 1, that's 12. That's not what we want or need. Oh, let's see. Might have to multiply here and then make a divide. Let's see here. Jeez, this is hard. Okay. Man, oh man. Okay. 12 plus 13. 25. 25 plus 6. No, no, no. That's not going to work. Jeez. Mmm, mmm, mmm. Mmm. 6 times 13. 13. 17. 26. 39. 39 plus 39. It's going to be 60. No, it's going to be 78. 6 times 13 will be 78. Divide 78 by 12. And you get what? What? What?","[1,6,12,13]",,180,"start_state = (1, 6, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+12=25"",
    resulting_state=(1, 6, 25),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*12=72"",
    resulting_state=(1, 13, 72),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12*1=12"",
    resulting_state=(6, 12, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+13=25"",
    resulting_state=(1, 6, 25),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""25+6=31"",
    resulting_state=(1, 31),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*13=78"",
    resulting_state=(1, 12, 78),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""78/12=6.5"",
    resulting_state=(1, 6.5),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 6, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+12=25"",
    resulting_state=(1, 6, 25),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*12=72"",
    resulting_state=(1, 72, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12*1=1"",
    resulting_state=(12, 6, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+13=25"",
    resulting_state=(25, 6),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""25+6=31"",
    resulting_state=(31,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*13=78"",
    resulting_state=(1, 78, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""78/12=6.5"",
    resulting_state=(1, 6.5),
    comment="""",
)"
6," So target number is 24. So if I do, let's see, I did like 11 minus 3 would be 8, minus 3 would be 5. No. Let's see. Okay. What else can I do here? 11 minus 3 would be 8, times 3 is 24, but then that doesn't help me with the 12. Oh, come on. Come on. Those practice ones were so easy. 3 minus 12 minus 3 would be 9, minus 3 would be 6, times, no. 12 minus 11 is 1. 3 times 3 is only 9, plus 1 would be 10. 12 minus 3 is 9. 11 minus 3 is 8. Holy crap. Why is this so difficult? 12 minus 3 is 9. 11 minus 3 is 8. So 9 times 8, no. 12 divided by 3 is 4. No. So 12 divided by 3 is 4. 11 minus 3 is 8, but then multiply those together and you get 32. That doesn't do me any good. 11 minus 3 is 8. No. Come on. Think, think, think. Okay. 3 minus 3 is 4.","[3,3,11,12]",,180,"start_state = (3, 3, 11, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-3-3=5"",
    resulting_state=(5, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-3=8"",
    resulting_state=(3, 8, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8*3=24"",
    resulting_state=(12, 24),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12-3-3=6"",
    resulting_state=(6, 11),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-11=1"",
    resulting_state=(1, 3, 3),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*3+1=10"",
    resulting_state=(10,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12-3=9"",
    resulting_state=(3, 9, 11),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*(11-3)=72"",
    resulting_state=(72,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12/3=4"",
    resulting_state=(3, 4, 11),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11-3=8"",
    resulting_state=(4, 8),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*8=32"",
    resulting_state=(32,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11-3=8"",
    resulting_state=(3, 8, 12),
    result_calc_error=False,
    comment='""""',
)

# I don't seriously think the participant meant 3-3=4, so I'm not putting anything there","start_state = (3, 3, 11, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-3=8"",
    resulting_state=(8, 3, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8-3=5"",
    resulting_state=(5, 12),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-3=8"",
    resulting_state=(8, 3, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*3=24"",
    resulting_state=(24, 12),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-3=9"",
    resulting_state=(9, 3, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9-3=6"",
    resulting_state=(6, 11),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-11=1"",
    resulting_state=(3, 3, 1),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(9, 1),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+1=10"",
    resulting_state=(10,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-3=9"",
    resulting_state=(9, 3, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-3=8"",
    resulting_state=(9, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*8=72"",
    resulting_state=(72,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12/3=4"",
    resulting_state=(4, 3, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-3=8"",
    resulting_state=(4, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*8=32"",
    resulting_state=(32,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-3=8"",
    resulting_state=(8, 3, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3-3=4"",
    resulting_state=(4, 11, 12),
    result_calc_error=True,
    comment="""",
)"
7," Okay. We got 8 and 14. That's only 22. We got 28 and 3. We got 14. We got 7 times 4 is 28. 49 and 16. Dang. 7. 7 plus 4. 4 is 11. And 11 is 22. 7 minus 4 is 3. 3 times 4 is 12. 12 is 7. 7 plus 7 is 14 minus... 7 times 4 is 28 minus 7 is 20. Wait. 7 times 4 is 28 minus 7 is 21 plus 4 is 25. 7 times 4 is 28. I feel like... 28. I need to get 4. I'm not going to get 4 out of that. I can't just do that. 7 minus 7 is 0. 4 minus 4 is 0. 4... 7 plus 4 is 11 plus 4 is 16. 7 plus 4 is 11 plus 4 is 16. What about 4 plus... No. 4 times 4 is 16. And 7 plus 4 is 14. And 7 plus 4 is 14. And 7 plus 4 is 14. 7... 7 plus 4... No. 4 times 4 is 16. No. What about 49 minus 24? What about 49 minus 28? What about seven? Wait, no, I said four times four is 16.","[4,4,7,7]",(4x4,180,"start_state = (4, 4, 7, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+4=8"",
    resulting_state=(7, 7, 8),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+7=14"",
    resulting_state=(8, 14),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+14=22"",
    resulting_state=(22,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*7=28"",
    resulting_state=(4, 7, 28),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(3, 28),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*7=49"",
    resulting_state=(4, 4, 49),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(16, 49),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+4=11"",
    resulting_state=(4, 7, 11),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+(7+4)=22"",
    resulting_state=(22,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(3, 4, 7),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*4=12"",
    resulting_state=(7, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+7=14"",
    resulting_state=(4, 4, 14),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*4-7=21"",
    resulting_state=(4, 21),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""21+4=25"",
    resulting_state=(25,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7-7=0"",
    resulting_state=(0, 4, 4),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4-4=0"",
    resulting_state=(0, 7, 7),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+4=11"",
    resulting_state=(4, 7, 11),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+4=16"",
    resulting_state=(7, 16),
    result_calc_error=True,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(7, 7, 16),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+4=14"",
    resulting_state=(4, 7, 14),
    result_calc_error=True,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(7, 7, 16),
    result_calc_error=False,
    comment='""""',
)

# It looks like the participant is working backward here
graph.set_subgoal(subgoal_state=(49, 28), state_after_subgoal=(24,), comment='""""')","start_state = (4, 4, 7, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(4+4)+(7+7)=22"",
    resulting_state=(22,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*7=28"",
    resulting_state=(28, 4, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(28, 3),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+7=14"",
    resulting_state=(4, 4, 14),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*7=28"",
    resulting_state=(28, 4, 7),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*7=49"",
    resulting_state=(4, 4, 49),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(16, 49),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+7=11"",
    resulting_state=(11, 4, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+(4+7)=22"",
    resulting_state=(22,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(3, 4, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*4=12"",
    resulting_state=(12, 7),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+7=14"",
    resulting_state=(4, 4, 14),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""((4*7)-7)+4=25"",
    resulting_state=(25,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*7=28"",
    resulting_state=(28, 4, 7),
    comment="""",
)

graph.set_subgoal(subgoal_state=(28, 4), state_after_subgoal=(24,), comment="""")

new_state = graph.explore_operation(
    curr_state,
    operation=""7-7=0"",
    resulting_state=(4, 4, 0),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4-4=0"",
    resulting_state=(0, 0),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(4+7)+4=16"",
    resulting_state=(16, 7),
    result_calc_error=True,
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(16, 7, 7),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+4=14"",
    resulting_state=(14, 4, 7),
    result_calc_error=True,
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(16, 7, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*7=49"",
    resulting_state=(16, 49),
    comment="""",
)"
8," This thing is not easy without a calculator, but I'm doing it anyway. So, oh, I know this one. 5 times 2 plus 2 plus 12.","[2,2,5,12]",5x2+2+12,20,"start_state = (2, 2, 5, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*2+2+12=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (2, 2, 5, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*2+2+12=24"",
    resulting_state=(24,),
    comment="""",
)"
9," These elevens are gonna be the death of me. Seven times eight is fifty-six. Nine is nineteen? No. Eight times eight is sixteen. Sixteen times seven? Divided by eleven? No. Okay. I can also use the eight to eliminate itself. No, I can't, because there's not a one. So it would need to be...that's eighty-eight. And then what's seven plus eight is fifteen. Eighty-eight divided by fifteen? No. Ahh. To seven...seven plus eleven equals eighteen. Seven plus eleven? Eighteen. What if I had eighteen to work with? Eighteen times eight is one-forty-four. Divided by eight is still eighteen. And that's not gonna work. Unless I got, like, a huge number. Eight times eight is not sixteen. It is sixty-four. Let's see if we do sixty...is it sixty-four? Let's try it. Eight times eight is sixty-four. Then we do times eleven. Seven-oh-four divided by seven. No. That's not gonna work. I don't know what to do. And what's eight plus seven? Eight plus seven is fifteen. Eight plus seven minus eight? Eight. Eight plus seven plus eight? Twenty-three. Ahh.","[7,8,8,11]",8+7,180,"start_state = (7, 8, 8, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*8=56"",
    resulting_state=(8, 11, 56),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""56-(11+8)=37"",
    resulting_state=(37,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8*8=16"",
    resulting_state=(7, 11, 16),
    result_calc_error=True,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""16*7=112"",
    resulting_state=(11, 112),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""112/11=10.18"",
    resulting_state=(10.18,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8*11=88"",
    resulting_state=(7, 8, 88),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+8=15"",
    resulting_state=(15, 88),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""88/15=5.87"",
    resulting_state=(5.87,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+11=18"",
    resulting_state=(8, 8, 18),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(18*8)/8=18"",
    resulting_state=(18,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8*8=64"",
    resulting_state=(7, 11, 64),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(64*11)/7=100.57"",
    resulting_state=(100.57,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+7=15"",
    resulting_state=(8, 11, 15),
    result_calc_error=False,
    comment='""""',
)


curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""15-8=7"",
    resulting_state=(7, 11),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+7+8=23"",
    resulting_state=(11, 23),
    result_calc_error=False,
    comment='""""',
)","start_state = (7, 8, 8, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*8=56"",
    resulting_state=(56, 8, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+11=19"",
    resulting_state=(56, 19),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+8=16"",
    resulting_state=(7, 16, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""16*7=112"",
    resulting_state=(112, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""16/11=16/11"",
    resulting_state=(7, 1.45),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*11=88"",
    resulting_state=(7, 88, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+8=15"",
    resulting_state=(15, 88),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""88/15=88/15"",
    resulting_state=(5.87,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+11=18"",
    resulting_state=(18, 8, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""18*8=144"",
    resulting_state=(144, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""144/8=18"",
    resulting_state=(18,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*8=64"",
    resulting_state=(7, 64, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""64*11=704"",
    resulting_state=(7, 704),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+7=15"",
    resulting_state=(15, 8, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""15-8=7"",
    resulting_state=(7, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""15+8=23"",
    resulting_state=(23, 11),
    comment="""",
)"
10, Target number 24 is easy. 13 minus 11 is 2 times the quantity times 7 is 14 plus 10 is 24.,"[7,10,11,13]",(13-11)x7+10,26,"start_state = (7, 10, 11, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(13-11)*7+10=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (7, 10, 11, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(13-11)*7+10=24"",
    resulting_state=(24,),
    comment="""",
)"
11," Huh. Eleven minus nine equals two. Hmm. I would only give me 23 if I did nine minus eight. Alright, eleven and nine is 20. And I would need four more. Eleven and eight is 19. Hmm. Okay, let's see what this is. Eleven plus eleven. Eleven plus eleven equals 22. Twenty-two minus nine equals 13 plus eight equals 21. Or twenty-two minus eight. Equals... equals 14. That don't make no sense either. Okay. Trying to come up with this problem. Twenty-two... Let me see. Is it like, you're trying to get to 24? Mm-hmm. Using these numbers. Are you adding or subtracting or what? You can do whatever you want. But it's a survey. You really can't help me. Oh. This is a hard one. Nineteen. I need five more. Okay, so... Or 20. And then...","[8,9,11,11]",,180,"start_state = (8, 9, 11, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-9=2"",
    resulting_state=(2, 8, 11),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+11+9-8=23"",
    resulting_state=(23,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+9=20"",
    resulting_state=(8, 11, 20),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+8=19"",
    resulting_state=(9, 19, 11),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+11=22"",
    resulting_state=(8, 9, 22),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""22-9+8=21"",
    resulting_state=(21,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""22-8=14"",
    resulting_state=(9, 14),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+8=19"",
    resulting_state=(9, 11, 19),
    result_calc_error=False,
    comment='""""',
)

graph.set_subgoal(subgoal_state=(19, 5), state_after_subgoal=(24,), comment='""""')","start_state = (8, 9, 11, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)


new_state = graph.explore_operation(
    curr_state,
    operation=""11-9=2"",
    resulting_state=(8, 2, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(9-8)+11+11=23"",
    resulting_state=(23,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+9=20"",
    resulting_state=(8, 20, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+8=19"",
    resulting_state=(19, 9, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+11=22"",
    resulting_state=(8, 9, 22),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""22-9=13"",
    resulting_state=(8, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+13=21"",
    resulting_state=(21,),
    comment="""",
)

curr_state = graph.move_to_node((8, 9, 22))

new_state = graph.explore_operation(
    curr_state,
    operation=""22-8=14"",
    resulting_state=(14, 9),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+11=19"",
    resulting_state=(19, 9, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+11=20"",
    resulting_state=(8, 20, 11),
    comment="""",
)"
12," Okay, so then if I do 13 and 11 is 15. So if I do 13, okay, I've got to figure out these stupid order of operations. Okay, 13 minus 13 is fine, which that equals 0 plus 11 plus that. Okay.","[11,13,13,13]",(13-13)+11+13,29,"start_state = (11, 13, 13, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+11=24"",
    resulting_state=(13, 13, 24),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(13-13)+11+13=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (11, 13, 13, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+(13-11)=15"",
    resulting_state=(15, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-13=0"",
    resulting_state=(11, 0, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""0+11+13=24"",
    resulting_state=(24,),
    comment="""",
)"
13, 1 plus 5 is 6. 6 and 6 is 36 minus 5. 6 times 4 is 24. 6 times 4. Hmm. 6 times 4. 5 minus 1 is 4. Let me see. 6. 6. 1 times 5. Times 5. 6. 1 times 5. Times 5. 5 times 6 is 36 minus 1. Let me see. 6 times 5. 6 times 5 is 30 minus 6. 6 times 5 minus,"[1,5,5,6]",(6x5)-(5+1),80,"start_state = (1, 5, 5, 6)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+5=6"",
    resulting_state=(5, 6, 6),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*6=36"",
    resulting_state=(5, 36),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""36-5=31"",
    resulting_state=(31,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*(5-1)=24"",
    resulting_state=(5, 24),
    result_calc_error=False,
    comment='""""',
)

graph.set_subgoal(subgoal_state=(4, 6), state_after_subgoal=(24,), comment='""""')

new_state = graph.explore_operation(
    curr_state,
    operation=""1*5*5=25"",
    resulting_state=(6, 25),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*6=30"",
    resulting_state=(1, 5, 30),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""30-(5+1)=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 5, 5, 6)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+5=6"",
    resulting_state=(6, 5, 6),
    comment="""",
)


curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*6=36"",
    resulting_state=(36, 5),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""36-5=31"",
    resulting_state=(31,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

graph.set_subgoal(subgoal_state=(6, 4), state_after_subgoal=(24,), comment="""")

new_state = graph.explore_operation(
    curr_state,
    operation=""5-1=4"",
    resulting_state=(4, 5, 6),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""1*5=5"",
    resulting_state=(5, 5, 6),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*6=36"",
    resulting_state=(1, 36, 5),
    result_calc_error=True,
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""36-1=35"",
    resulting_state=(35, 5),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*5=30"",
    resulting_state=(1, 5, 30),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""30-(1+5)=24"",
    resulting_state=(24,),
    comment="""",
)"
14," Okay, our next set of numbers is 4, 4, 9, 11. Okay, so let's see, 4 times 4 is 16, plus 11 would be 27, minus 9, that doesn't equal 24. What is 9 minus 4? Can we do 11 minus 9? 11 minus 9 would be 2, plus 4 is 6, and then we have an extra 4. That'll work. So let's do double parentheses, 11 minus 9. That gives us 2, and then we add 4 to it, we give us 6, close that, and then multiply that times 4, now it should be 24.","[4,4,9,11]",((11-9)+4)x4,68,"start_state = (4, 4, 9, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4+11-9=18"",
    resulting_state=(18,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9-4=5"",
    resulting_state=(4, 5, 11),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-9=2"",
    resulting_state=(2, 4, 4),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(2+4)*4=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (4, 4, 9, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(16, 9, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""16+11=27"",
    resulting_state=(27, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""27-9=18"",
    resulting_state=(18,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9-4=5"",
    resulting_state=(5, 4, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-9=2"",
    resulting_state=(4, 4, 2),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2+4=6"",
    resulting_state=(6, 4),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*4=24"",
    resulting_state=(24,),
    comment="""",
)"
15," All righty. 2, 2, 7, and 10 to equal 24. Let's see. 7 times 2 is 14 plus 10 equals 24, but that leaves out the last 2. 10 times 2 equals 20. Can't get 24 without any other weighting combos there. 17, 18, 19, 17. Didn't get a 7. Can't get a 7. 7 out of 2, 2s. Hmm. Hmm. Did I get 48? Lied by 2. 14, no. And I get 34. 14. 2 is 28. No. Hmm. So, subtract something from 10. That's 3. 7 plus 2 is 6. Times 2 is 6. Times 2 is 12. So, that's no. 7 plus 2 is 9. 19. Did I try 1? Nope. Um, hmm. So, 11. 9. 7 plus 2 plus 2. 11. 9. 18. 28. Man, I don't think I'm going to win this one. 10 minus 2 is 8. 9. And...","[2,2,7,10]",,180,"start_state = (2, 2, 7, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*2+10=24"",
    resulting_state=(2, 24),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*2=20"",
    resulting_state=(2, 7, 20),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+7+2=19"",
    resulting_state=(2, 19),
    result_calc_error=False,
    comment='""""',
)

graph.set_subgoal(subgoal_state=(48, 2), state_after_subgoal=(24,), comment='""""')

new_state = graph.explore_operation(
    curr_state,
    operation=""10+2+2=14"",
    resulting_state=(7, 14),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(7*2)+(10*2)=34"",
    resulting_state=(34,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*2=14"",
    resulting_state=(2, 10, 14),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""14*2=28"",
    resulting_state=(10, 28),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10-7=3"",
    resulting_state=(2, 2, 3),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*2*2=12"",
    resulting_state=(12,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+2+10=19"",
    resulting_state=(2, 19),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+(2/2)=11"",
    resulting_state=(7, 11),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10-(2/2)=9"",
    resulting_state=(7, 9),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+2+2=11"",
    resulting_state=(10, 11),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+(2/2)+7=18"",
    resulting_state=(18,),
    result_calc_error=False,
    comment='""""',
)

# not sure what's going on
new_state = graph.explore_operation(
    curr_state,
    operation=""10-2=8"",
    resulting_state=(2, 7, 8),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+2=9"",
    resulting_state=(8, 9),
    result_calc_error=False,
    comment='""""',
)","start_state = (2, 2, 7, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*2=14"",
    resulting_state=(14, 2, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""14+10=24"",
    resulting_state=(24, 2),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*2=20"",
    resulting_state=(20, 2, 7),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+7=17"",
    resulting_state=(17, 2, 2),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*7=14"",
    resulting_state=(14, 2, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""14+(2*10)=34"",
    resulting_state=(34,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""14*2=28"",
    resulting_state=(28, 10),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10-7=3"",
    resulting_state=(2, 2, 3),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*3=6"",
    resulting_state=(6, 2),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*2=12"",
    resulting_state=(12,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+2=9"",
    resulting_state=(9, 2, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+10=19"",
    resulting_state=(19, 2),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2/2=1"",
    resulting_state=(1, 7, 10),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+2+2=11"",
    resulting_state=(11, 10),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(2/2)+7+10=18"",
    resulting_state=(18,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(2+2)*7=28"",
    resulting_state=(28, 10),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10-2=8"",
    resulting_state=(8, 2, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2+7=9"",
    resulting_state=(8, 9),
    comment="""",
)"
16, Target number 24. 7 minus 2 is 5. 5 times 5 is 25 minus 1. So 7 minus 2 is 5 times 5 minus 1.,"[1,2,5,7]",(7-2)x5-1,26,"start_state = (1, 2, 5, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(7-2)*5-1=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 2, 5, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7-2=5"",
    resulting_state=(1, 5, 5),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*5=25"",
    resulting_state=(1, 25),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""25-1=24"",
    resulting_state=(24,),
    comment="""",
)"
17," 10 plus 5 equals 10. I don't know. So I'm going to do 25 plus 9, 14, 11, 9 plus 5, 14 plus 10, 6 plus 9 plus 10, 1 plus 9 plus 10. 5 plus 4 times 9, 10 plus 9 plus 10. 1 times 9.","[1,5,9,10]",5+10+(1x9),103,"start_state = (1, 5, 9, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+5=15"",
    resulting_state=(1, 9, 15),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+9=14"",
    resulting_state=(1, 10, 14),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10+1=11"",
    resulting_state=(11, 14),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+5+10=24"",
    resulting_state=(1, 24),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(5+1)+9+10=25"",
    resulting_state=(25,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+9+10=20"",
    resulting_state=(5, 20),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(5-1)*9=36"",
    resulting_state=(10, 36),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+9=19"",
    resulting_state=(1, 5, 19),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+10+(1*9)=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 5, 9, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(1+9)+5+10=25"",
    resulting_state=(25,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+9=14"",
    resulting_state=(1, 14, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+10=11"",
    resulting_state=(11, 14),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""14+10=24"",
    resulting_state=(1, 24),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(1+5)+9+10"",
    resulting_state=(25,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(5-1)*9=36"",
    resulting_state=(36, 10),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+(9+1)=20"",
    resulting_state=(20, 5),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""1*9=9"",
    resulting_state=(9, 5, 10),
    comment="""",
)"
18," Okay, so I messed up on the other one. I actually got the answer in my head and was working it out, but ran out of time. So, let's see here. I need to get to 4. If I want to do 8 times 3, I would have to get those numbers 13, 5, and 6 somehow equal 3. And I don't think I can do that, so let's explore other options. 13 minus 5 is 8, so 8 plus 8 is 16, and then plus 6 would be 22, and I'd be missing 2. So, 13 minus 6 is 7. No, that wouldn't work out. It needs to be divisible by... 4 and 8. So, um, let's see. 8 times 6 is 48, and that would leave me with 13 and 15, which I can't really do much with. So, um... What's 13 times 5? Let me see. 65. And 8 times 6 is 48. That would not work. 5 plus 8 is 13. 13 plus 13 is 26. Gosh, I feel like every time there's a 5, it throws things off. Um... Uh... 24 minus 13 is 11. That's 11. That would not work. 5 plus 6 is 11. Plus 8 is 19. 20... 19 plus 13 is 32. It's too big. So... How about 13 minus 6 plus 5 is 12, plus 8 is 20. I feel like this is...","[5,6,8,13]",,180,"start_state = (5, 6, 8, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

graph.set_subgoal(subgoal_state=(8, 3), state_after_subgoal=(24,), comment='""""')

new_state = graph.explore_operation(
    curr_state,
    operation=""13-5=8"",
    resulting_state=(6, 8, 8),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+8+6=22"",
    resulting_state=(22,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13-6=7"",
    resulting_state=(5, 7, 8),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*6=48"",
    resulting_state=(5, 13, 48),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*5=65"",
    resulting_state=(6, 8, 65),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*6=48"",
    resulting_state=(5, 13, 48),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+8=13"",
    resulting_state=(6, 13, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13+13=26"",
    resulting_state=(6, 26),
    result_calc_error=False,
    comment='""""',
)

graph.set_subgoal(subgoal_state=(11, 13), state_after_subgoal=(24,), comment='""""')

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5+6=11"",
    resulting_state=(8, 11, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+8=19"",
    resulting_state=(13, 19),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""19+13=32"",
    resulting_state=(32,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13-6+5+8=20"",
    resulting_state=(20,),
    result_calc_error=False,
    comment='""""',
)","start_state = (5, 6, 8, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

graph.set_subgoal(subgoal_state=(4, 6), state_after_subgoal=(24,), comment="""")

graph.set_subgoal(subgoal_state=(3, 8), state_after_subgoal=(24,), comment="""")

new_state = graph.explore_operation(
    curr_state,
    operation=""13-5=8"",
    resulting_state=(8, 6, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+8=16"",
    resulting_state=(16, 6),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""16+6=22"",
    resulting_state=(22,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-6=7"",
    resulting_state=(5, 7, 8),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*6=48"",
    resulting_state=(5, 48, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*5=65"",
    resulting_state=(65, 6, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*8=48"",
    resulting_state=(65, 48),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+8=13"",
    resulting_state=(13, 6, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+13=26"",
    resulting_state=(26, 6),
    comment="""",
)

graph.set_subgoal(subgoal_state=(11, 13), state_after_subgoal=(24,), comment="""")

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+6=11"",
    resulting_state=(11, 8, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+8=19"",
    resulting_state=(19, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""19+13=32"",
    resulting_state=(32,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-6+5=12"",
    resulting_state=(12, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+8=20"",
    resulting_state=(20,),
    comment="""",
)"
19," simplify this 12-9 is 3 3-9 is 12 3-8 is 11 3-8 is 11 No, I don't know This one is a little too hard for me This one is a little too hard for me Okay, let's see I think if we do 8 Then let's try to make it 5 it with 12 20 plus 9 31 then minus 9 would be 22 so now 12 plus 9 12 12 21 30 2 1 3 22 yeah oh I'm in me he 17 not really a meeting but the equivalent I suppose 9 plus 8 17 plus 12 29 now yeah I think I might be beef with this one sorry to say twelve 24 12 times 8 12 4 6 6 2 4 96 96 minus 81 15 yeah geez another one that I'm stumped on sorry to say I'm just not very good at math at that point I'm sorry to say I'm sorry to say I'm just not very good at math at the moment I guess once you get out of a thinking panic 17 minus 9 something minus 9 would be","[8,9,9,12]",8+9,180,"start_state = (8, 9, 9, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-9=3"",
    resulting_state=(3, 8, 9),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3+9=12"",
    resulting_state=(8, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+8=11"",
    resulting_state=(9, 11),
    result_calc_error=False,
    comment='""""',
)

# Is there a subgoal being set here?

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+12=20"",
    resulting_state=(9, 9, 20),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""20+9=31"",
    resulting_state=(9, 31),
    result_calc_error=True,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""31-9=22"",
    resulting_state=(22,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12+9=21"",
    resulting_state=(8, 9, 21),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""21+9=30"",
    resulting_state=(8, 30),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""30-8=22"",
    resulting_state=(22,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+8=17"",
    resulting_state=(9, 12, 17),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""17+12=29"",
    resulting_state=(9, 29),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12*8=96"",
    resulting_state=(9, 9, 96),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""96-(9*9)=15"",
    resulting_state=(15,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+9-9=8"",
    resulting_state=(8, 12),
    result_calc_error=False,
    comment='""""',
)","start_state = (8, 9, 9, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-9=3"",
    resulting_state=(8, 3, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+9=12"",
    resulting_state=(8, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+8=11"",
    resulting_state=(11, 9),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+12=20"",
    resulting_state=(20, 9, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""20+9=31"",
    resulting_state=(31, 9),
    result_calc_error=True,
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""31-9=22"",
    resulting_state=(22,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+9=21"",
    resulting_state=(8, 21, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""21+9=30"",
    resulting_state=(8, 30),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""30-8=22"",
    resulting_state=(22,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+8=17"",
    resulting_state=(17, 9, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""17+12=29"",
    resulting_state=(29, 9),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12*8=96"",
    resulting_state=(96, 9, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""96-(9*9)=15"",
    resulting_state=(15,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+9=17"",
    resulting_state=(17, 9, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""17-9=8"",
    resulting_state=(8, 12),
    comment="""",
)"
20," Target number 24. Okay. 1, 4, 12, 12. I don't know how to do any of these. 1, 4, 12, 12. So, what would be the easiest way to do that? Nothing that I know how to do because I'm terrible at math. And so we have to ask AI to tell me how to do that. 1 over 12 is 24. This is a minus 4. Nope. So, if we do 4 minus 1. Nope, nope. 4 minus 1 times 12. 12 minus 12.","[1,4,12,12]",((4-1)x12)-12,57,"start_state = (1, 4, 12, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+12=24"",
    resulting_state=(1, 4, 24),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""((4-1)*12)-12=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 4, 12, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1*(12+12)=24"",
    resulting_state=(24, 4),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4-1=3"",
    resulting_state=(3, 12, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(4-1)*12=36"",
    resulting_state=(36, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-12=0"",
    resulting_state=(1, 4, 0),
    comment="""",
)"
21," This one is tough. This one is tough. It should be 2. This one is 3. Oh, right. I get this one. 7 minus 4. That is 3. Right? Minus 1. That is 2. Minus 2. 2 times 12. See, it is the truth. This is 4, 3, 2. 2 times is 1. So why is it incorrect? Okay. Okay. Let us start the bracket. 7 minus 4. Open the bracket. Then it will be 3. 3 minus 3 times 12. It will not work. So it should be at least that one. Minus again. 1. Okay. So times 12. Submit.","[1,4,7,12]",(7-4-1)x12,93,"start_state = (1, 4, 7, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

graph.set_subgoal(subgoal_state=(2, 12), state_after_subgoal=(24,), comment='""""')

new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(1, 3, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3-1=2"",
    resulting_state=(2, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""2*12=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 4, 7, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

graph.set_subgoal(subgoal_state=(2, 12), state_after_subgoal=(24,), comment="""")

new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(1, 3, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3-1=2"",
    resulting_state=(2, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*12=24"",
    resulting_state=(24,),
    comment="""",
)"
22," 1...2...3...6...7... ...14 ...15 ...16...17...18...19...20...21...22...23...24...24...25...26...27...28...29...30...35...36..37! 6, 6, uh-uh, 6 times 2 plus 3 plus 7. 10, 12, no, it's 21, 7, 6 times 2 is 12. Plus 3. It's 12. 7 and 3 is 21. Okay. 7 times 3. Damn it. 7 times 3. 6 plus 2.","[2,3,6,7]",(7x3)-6+2,180,"start_state = (2, 3, 6, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*2+3+7=21"",
    resulting_state=(21,),
    result_calc_error=True,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*3=21"",
    resulting_state=(2, 6, 21),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6+2=8"",
    resulting_state=(8, 21),
    result_calc_error=False,
    comment='""""',
)","start_state = (2, 3, 6, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*2+3+7=22"",
    resulting_state=(22,),
    comment="""",
)


new_state = graph.explore_operation(
    curr_state,
    operation=""3*7=21"",
    resulting_state=(2, 21, 6),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*2=12"",
    resulting_state=(12, 3, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+3=15"",
    resulting_state=(15, 7),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*3=21"",
    resulting_state=(2, 21, 6),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6+2=8"",
    resulting_state=(8, 21),
    comment="""",
)"
23," 4 times 7 is 28, and 2 is 18, and 2 is 20.","[4,7,8,11]",(11-7)x4+8,76,"start_state = (4, 7, 8, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*7=28"",
    resulting_state=(8, 11, 28),
    result_calc_error=False,
    comment='""""',
)

# not sure what the rest of the transcript means
new_state = graph.explore_operation(
    curr_state,
    operation=""(11-7)*4+8=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (4, 7, 8, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)


new_state = graph.explore_operation(
    curr_state,
    operation=""4*7=28"",
    resulting_state=(28, 8, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+11=18"",
    resulting_state=(4, 18, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""18+(8/4)=20"",
    resulting_state=(20,),
    comment="""",
)"
24," Okay. 9 plus 11 is 20. So I can't do... because 4 divided by 4 is 1, not 4. But 9 minus 4 is 5. 5 times 4 is 20. What if I do 11 minus 4, which is 8, 9, 10, 11, 12, no, 7, 7. 9 times 4 is 36. Minus 7 is 29. 9 plus 4 is 13. Plus 11. Wait, that makes sense. So 9 plus 4 is 13. Is 13 plus 11. So I could do 9 plus 4... No, that doesn't make sense because if I do 4 divided by 4, it's not 4. Plus 11. Oh, I could do time. No. Doesn't make sense. What can I do? Can I do plus minus? No, I can't do that. 9 plus 4 is 13. Plus 11. And if I do minus 4, that's 20. What if I do 11 plus 4? That's 11 plus 9. No. What if I do 11 plus... that's 20. What if I do 9 times 4, which is 36, minus 11? That's 25. Okay, that doesn't work. 4 times 4 is 16. 16 plus 11 is 27. Minus 9 would be 18. And 9 times 4 is 36. I already did that one. 9 plus 11 is 20. The issue is this extra 4. And I think I have to do all of the numbers. Yes, I do. If I do times...","[4,4,9,11]",9+11+4,180,"start_state = (4, 4, 9, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+11=20"",
    resulting_state=(4, 4, 20),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4/4=1"",
    resulting_state=(1, 20),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9-4=5"",
    resulting_state=(4, 5, 11),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5*4=20"",
    resulting_state=(20, 11),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11-4=8"",
    resulting_state=(4, 8, 9),
    result_calc_error=True,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+4=12"",
    resulting_state=(9, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11-4=7"",
    resulting_state=(4, 7, 9),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*4=36"",
    resulting_state=(4, 11, 36),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
# Where does this happen?
new_state = graph.explore_operation(
    curr_state,
    operation=""36-(11-4)=29"",
    resulting_state=(29,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+4=13"",
    resulting_state=(4, 11, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13+11=24"",
    resulting_state=(4, 24),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""24-4=20"",
    resulting_state=(20,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+4=15"",
    resulting_state=(4, 9, 15),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+9=20"",
    resulting_state=(4, 4, 20),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*4-11=25"",
    resulting_state=(4, 25),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(9, 11, 16),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""16+11-9=18"",
    resulting_state=(18,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*4=36"",
    resulting_state=(4, 11, 36),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+11=20"",
    resulting_state=(4, 4, 20),
    result_calc_error=False,
    comment='""""',
)","start_state = (4, 4, 9, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+11=20"",
    resulting_state=(4, 4, 20),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4/4=1"",
    resulting_state=(1, 20),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9-4=5"",
    resulting_state=(5, 4, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*4=20"",
    resulting_state=(20, 11),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-4=7"",
    resulting_state=(7, 4, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*9=36"",
    resulting_state=(7, 36),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""36-7=29"",
    resulting_state=(29,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+4=13"",
    resulting_state=(4, 13, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+11=24"",
    resulting_state=(4, 24),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""24-4=20"",
    resulting_state=(20,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+4=15"",
    resulting_state=(15, 4, 9),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+9=20"",
    resulting_state=(4, 4, 20),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*4=36"",
    resulting_state=(4, 36, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""36-11=25"",
    resulting_state=(4, 25),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(16, 9, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""16+11=27"",
    resulting_state=(27, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""27-9=18"",
    resulting_state=(18,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*4=36"",
    resulting_state=(4, 36, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+11=20"",
    resulting_state=(4, 4, 20),
    comment="""",
)"
25," Okay, so now we have 9, and we have 10, and 10. Those are some big numbers. Okay, on a 13, 10 times 10 is 100, 10 times 9 is 90. Let's see. No, that would give me a 3, 9 times 3. What if I did, okay, what if I did 10 times 9 is 90? 10 divided by 10 should give me 1. I forgot what I was doing now. Oh, I hate when that happens. I thought I just had it. Okay, 13 minus 10, what was I thinking? Oh, okay, 13, I just had it, minus 10, which would give me 3. Okay, so now we have 3, and then 9 times 3, okay, times 9. No, I totally messed that one up already. Okay, let's say if we do 9 times 3, okay, 9 times 3, which would be 72. I don't know why this is so hard. I thought I had it, too. No, I can't see it. Okay, 9 and 9 and 9 and 9 and 9. It should be 14 plus 9. 13 plus 10. 13 plus 10. 23, 33, minus 9.","[9,10,10,13]",13+10+10-9,134,"start_state = (9, 10, 10, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*10=100"",
    resulting_state=(9, 13, 100),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*9=90"",
    resulting_state=(10, 13, 90),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-10=3"",
    resulting_state=(3, 9, 10),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*3=27"",
    resulting_state=(10, 27),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10*9=90"",
    resulting_state=(10, 13, 90),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10/10=1"",
    resulting_state=(1, 9, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-10=3"",
    resulting_state=(3, 9, 10),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*3=72"",
    resulting_state=(10, 72),
    result_calc_error=True,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13+(10/10)+9=23"",
    resulting_state=(23,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+10=23"",
    resulting_state=(9, 10, 23),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""23+10-9=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (9, 10, 10, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*10=100"",
    resulting_state=(9, 100, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*9=90"",
    resulting_state=(90, 10, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-10=3"",
    resulting_state=(9, 3, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*3=27"",
    resulting_state=(27, 10),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*9=90"",
    resulting_state=(90, 10, 13),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10/10=1"",
    resulting_state=(9, 1, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-10=3"",
    resulting_state=(9, 3, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*9=27"",
    resulting_state=(27, 10),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(10/10+13)+9=23"",
    resulting_state=(23,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+10=23"",
    resulting_state=(9, 10, 23),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""23+10=33"",
    resulting_state=(9, 33),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""33-9=24"",
    resulting_state=(24,),
    comment="""",
)"
26," Alright, this one might, this is even harder. I should have knew that wasn't right. Yeah, I know, I'm still thinking, man. I can't think. If you're trying to, 9 minus 2, 8, 9, no, 8, 13, no, 4, 11, 9, plus 2, plus 11, plus 2!","[2,2,9,11]",(9+2)+11+2,82,"start_state = (2, 2, 9, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9-2=8"",
    resulting_state=(2, 8, 11),
    result_calc_error=True,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+2=13"",
    resulting_state=(2, 9, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""2+2=4"",
    resulting_state=(4, 9, 11),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+2+11+2=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (2, 2, 9, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9-2=7"",
    resulting_state=(7, 2, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+2=13"",
    resulting_state=(13, 2, 9),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""2+2=4"",
    resulting_state=(4, 9, 11),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+2+11+2=24"",
    resulting_state=(24,),
    comment="""",
)"
27," 4, 4, 5, and 10. Okay. 4 times 4 is 16. No. 5 times 4 is 20. Plus 4 is 24. And what do I do with the 10? Work. Okay. Let's see. 4 times 4 is 20. Plus 10 is 30. No. 4 times 4 is 16. Plus 5 is 21. No. Okay. So 4 plus 4 is 8. Okay. So 4 plus 4 is 8. Plus 10 is 18. It's 23. 4 plus 10 is 14. No. Okay. Oh! 10 minus 5 is 5. Oh! 10 minus 5 is 5. Okay. 10 minus 5 is 5 times 4 plus 4.","[4,4,5,10]",(10-5)x4+4,101,"start_state = (4, 4, 5, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(5, 10, 16),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*4=20"",
    resulting_state=(4, 10, 20),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""20+4=24"",
    resulting_state=(10, 24),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=20"",
    resulting_state=(5, 10, 20),
    result_calc_error=True,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""20+10=30"",
    resulting_state=(5, 30),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*4+5=21"",
    resulting_state=(10, 21),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+4+10+5=23"",
    resulting_state=(23,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+10=14"",
    resulting_state=(4, 5, 14),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(10-5)*4+4=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (4, 4, 5, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(16, 5, 10),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*5=20"",
    resulting_state=(20, 4, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""20+4=24"",
    resulting_state=(24, 10),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=20"",
    resulting_state=(20, 5, 10),
    result_calc_error=True,
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""20+10=30"",
    resulting_state=(30, 5),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*4=16"",
    resulting_state=(16, 5, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""16+5=21"",
    resulting_state=(21, 10),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+4=8"",
    resulting_state=(8, 5, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+10=18"",
    resulting_state=(18, 5),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""18+5=23"",
    resulting_state=(23,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+10=14"",
    resulting_state=(14, 4, 5),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10-5=5"",
    resulting_state=(4, 4, 5),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*4+4=24"",
    resulting_state=(24,),
    comment="""",
)"
28," Okay, so we have 9, 5, 10. Interesting. So let's see, 19, that would be 24 already, times 1. So let's do 10 plus 9 is 19 plus 5 is 24. That's all multiplied by 1, which would give me 24.","[1,5,9,10]",(10+9+5)x1,18,"start_state = (1, 5, 9, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+10=19"",
    resulting_state=(1, 5, 19),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(19+5)*1=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 5, 9, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)


new_state = graph.explore_operation(
    curr_state,
    operation=""9+10=19"",
    resulting_state=(1, 5, 19),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(19+5)*1=24"",
    resulting_state=(24,),
    comment="""",
)"
29," All right, next one. It's big numbers again. This will be harder. Okay, so, let's see, 12 minus 7 is 5. That doesn't work there. Let's see. Nope. Any division is going to be wrong because it's got multiple. Let's see if I can do some multiplication here. Let's see what we come up with. 6 and then 2, 3, carry the 1, 6, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20. 5. Then, divide by that, which would be, nope, that doesn't work. Shoot. Let's try those two together. Let's see here. 1, 2, 1, carry the 4. Okay. Let's see there. Oh, 7 and 5. We come up with a decimal, so that doesn't work. And I take care of there. That comes up with 29. That's not right. I'm not going to be able to get this one. So, I'll sit here and continue to talk about the numbers to try to help you in your experiment, but this one's beyond me. I don't know how to do it. So, anything I've tried, I've tried multiplication. I've tried division. I've tried grouping them to do both things, and I come up with close answers. I've come up with 29. I've come up with 28. I came up with 26 one time, but I cannot hit the 24 number. So, like I say, I'm trying to continue to talk to you so that it matches up with what you want in your experiment. But I've tried the things that I can see to try on this one, and this one's too hard for me. So, I'll just continue to sit here with you until I time out. So, hopefully the three minutes runs out pretty quick because this is getting frustrating. All right. Still waiting for that three minutes to run out. So, continuing to talk along about the three minutes.","[7,12,12,13]",,180,"start_state = (7, 12, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-7=5"",
    resulting_state=(5, 12, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-7=6"",
    resulting_state=(6, 12, 12),
    result_calc_error=False,
    comment='""""',
)

# This one is genuinely baffling, I don't know what the participant is doing","start_state = (7, 12, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-7=5"",
    resulting_state=(5, 12, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-7=6"",
    resulting_state=(6, 12, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-7=5"",
    resulting_state=(5, 12, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+12+13=30"",
    resulting_state=(30,),
    result_calc_error=True,
    comment="""",
)"
30," Okay, 2, 3, 7, 9, 7 plus 3 is 10, 9 times 2 is 18, 2 times 3 is 6, 2 plus 3 is 5, 7 plus 3 is 10, 9 plus 2 is 11, 9 times 3 is 27, minus 5 is 22, 9 times 2 is 18, 7 minus 3 is 4, um, okay, 9 plus 7 is 16, aha, okay, so 9 plus 7, close, um, 16. 16 divided by 2 times 3.","[2,3,7,9]",((9+7)/2)x3,67,"start_state = (2, 3, 7, 9)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+3=10"",
    resulting_state=(2, 9, 10),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*2=18"",
    resulting_state=(3, 7, 18),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*3=6"",
    resulting_state=(6, 7, 9),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""2+3=5"",
    resulting_state=(5, 7, 9),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+3=10"",
    resulting_state=(2, 9, 10),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+2=11"",
    resulting_state=(3, 7, 11),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*3=27"",
    resulting_state=(2, 7, 27),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""27-(7-2)=22"",
    resulting_state=(22,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*2=18"",
    resulting_state=(3, 7, 18),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7-3=4"",
    resulting_state=(2, 4, 9),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+7=16"",
    resulting_state=(2, 3, 16),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(16/2)*3=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (2, 3, 7, 9)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+3=10"",
    resulting_state=(2, 10, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*2=18"",
    resulting_state=(18, 10),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*3=6"",
    resulting_state=(6, 7, 9),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""2+3=5"",
    resulting_state=(5, 7, 9),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+3=10"",
    resulting_state=(2, 10, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+2=11"",
    resulting_state=(11, 10),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*3=27"",
    resulting_state=(2, 27, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""27-(7-2)=22"",
    resulting_state=(22,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*2=18"",
    resulting_state=(18, 3, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7-3=4"",
    resulting_state=(18, 4),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+7=16"",
    resulting_state=(2, 3, 16),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""16/2*3=24"",
    resulting_state=(24,),
    comment="""",
)"
31," 9, 11, 12, 13... Ummm... 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, um, 13 minus 9, 4, 4 times, oh my god, sorry, sorry, um, 9 minus 11, that'd be 2, times 12, that would be 24, but then I have 13, oh my gosh, 3, um, 13 minus, 13 minus 9, would be 4, oh my, that'd be 16, no, I could get 23, oh, 12 divided by 9, or 9, 12 divided by 9, or 9 divided by 12, wait, that would not work, um,","[9,11,12,13]",13-9,180,"start_state = (9, 11, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-9=4"",
    resulting_state=(4, 11, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(11-9)*12=24"",
    resulting_state=(13, 24),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-9=4"",
    resulting_state=(4, 11, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4+12=16"",
    resulting_state=(11, 16),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+12=23"",
    resulting_state=(9, 13, 23),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12/9=1.33"",
    resulting_state=(1.33, 11, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9/12=0.75"",
    resulting_state=(0.75, 11, 13),
    result_calc_error=False,
    comment='""""',
)","start_state = (9, 11, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-9=4"",
    resulting_state=(4, 11, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-9=2"",
    resulting_state=(2, 12, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*12=24"",
    resulting_state=(24, 13),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-9=4"",
    resulting_state=(4, 11, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+12=16"",
    resulting_state=(16, 11),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+12=23"",
    resulting_state=(9, 23, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12/9=1.33"",
    resulting_state=(1.33, 11, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9/12=0.75"",
    resulting_state=(0.75, 11, 13),
    comment="""",
)"
32," How did we do that? Maybe- oh my goodness, 13 minus 5... 7. I'm not sure if I'm doing that right, apparently. Oops. Let's just put notetimes in the middle. 13 minus 5. Okay, that's going to be 8... 8. Oh, okay. There we go. We've already came to that number, maybe again? Thomas Plandell is not asking if you've i was doing it wrong now that's not it okay so maybe if i did oh that's not right so okay i think if i did 13 okay let's try this one more way if i did 13 and seven okay so wait minus if i did minus let me take this out of parentheses 13 minus seven but i think this is gonna work because it's i don't know if it's still in parentheses 13 plus 5 would make that 18 and then it would be 74 i think no i don't know if that's right no okay let me go back let me see if i did this right here","[5,7,13,13]",13-(7(13+5)),180,"start_state = (5, 7, 13, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-5=8"",
    resulting_state=(7, 8, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-7=6"",
    resulting_state=(5, 6, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+5=18"",
    resulting_state=(7, 13, 18),
    result_calc_error=False,
    comment='""""',
)","start_state = (5, 7, 13, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-5=8"",
    resulting_state=(8, 7, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+5=18"",
    resulting_state=(18, 7, 13),
    comment="""",
)"
33," 24. It says 7 times 3 is 21, plus 3 times 1. 7 times 3 plus 1 times, nope, 7 times 3 plus 3 times 1.","[1,3,3,7]",7x3+3x1,28,"start_state = (1, 3, 3, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*3+3*1=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 3, 3, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*3=21"",
    resulting_state=(1, 21, 3),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""21+(3*1)=24"",
    resulting_state=(24,),
    comment="""",
)"
34, minus 6 bracket closed plus 9 plus 6 times 9 plus 6,"[6,6,8,9]",(8-6)x9+6,167,"start_state = (6, 6, 8, 9)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(8-6)*9+6=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (6, 6, 8, 9)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(8-6)*9+6=24"",
    resulting_state=(24,),
    comment="""",
)"
35," Okay, 10, 3, 3, 1. 10 times, no, 10 plus 3, 10 plus 6, 7, 17, no. 3 times 3 is 9, plus 10, no. 10 times 3 is 30. 30 minus 4, 30 minus 4 is 26, so that doesn't work. 9, 10, that's 20, no. Let's see. 10 minus 1 is 9. 9 plus 9 is 18, no. 3 times 3 is 9. No. 10 times 3 is 30. 30 minus 3 is 27, minus 1 is 26. 3 plus 1 is 4. 4 times 3 is 12. 12 plus 10 is 22, so that doesn't work. 3 plus 3 is 6. That doesn't work. Plus 1 is 7, plus 10 is 17. That doesn't work. There is no answer to this one. I cannot get... I cannot get 24 out of these numbers. 3, 9, 3 cubed is 27. I don't think we can do cubed or anything like that. It's just dividing them up with those symbols. 10 plus 3 is 13. 13 times... 3 is 39, so that doesn't work. 10 plus 3 is 13, plus 3 is 16, plus 1 is 17. Ugh, there is no answer to this problem. I'm going to wait for the next problem, but I know you want me to keep talking. I hope it is recording because I want to get paid.","[1,3,3,10]",,180,"start_state = (1, 3, 3, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+3=13"",
    resulting_state=(1, 3, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+(3+3)+1=17"",
    resulting_state=(17,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*3+10=19"",
    resulting_state=(1, 19),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*3=30"",
    resulting_state=(1, 3, 30),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""30-(3+1)=26"",
    resulting_state=(26,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(1, 9, 10),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+1+10=20"",
    resulting_state=(20,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10-1+9=18"",
    resulting_state=(18,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(1, 9, 10),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*3=30"",
    resulting_state=(1, 3, 30),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""30-3-1=26"",
    resulting_state=(26,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(3+1)*3+10=22"",
    resulting_state=(22,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+3=6"",
    resulting_state=(1, 6, 10),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6+1+10=17"",
    resulting_state=(17,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10+3=13"",
    resulting_state=(1, 3, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13*3=39"",
    resulting_state=(1, 39),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+3+1=17"",
    resulting_state=(17,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 3, 3, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+3=13"",
    resulting_state=(1, 13, 3),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+(3+3)=16"",
    resulting_state=(16, 1),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""16+1=17"",
    resulting_state=(17,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(1, 9, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+10=19"",
    resulting_state=(1, 19),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*3=30"",
    resulting_state=(1, 30, 3),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""30-(1+3)=26"",
    resulting_state=(26,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(1, 9, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+10+1=20"",
    resulting_state=(20,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10-1=9"",
    resulting_state=(9, 3, 3),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+(3*3)=18"",
    resulting_state=(18,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(1, 9, 10),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*3=30"",
    resulting_state=(1, 30, 3),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""30-3=27"",
    resulting_state=(1, 27),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""27-1=26"",
    resulting_state=(26,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+1=4"",
    resulting_state=(4, 3, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*3=12"",
    resulting_state=(12, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+10=22"",
    resulting_state=(22,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+3=6"",
    resulting_state=(1, 6, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+6=7"",
    resulting_state=(7, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+10=17"",
    resulting_state=(17,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+3=13"",
    resulting_state=(1, 13, 3),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*3=39"",
    resulting_state=(1, 39),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+3=13"",
    resulting_state=(1, 13, 3),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+3=16"",
    resulting_state=(1, 16),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""16+1=17"",
    resulting_state=(17,),
    comment="""",
)"
36," All right, target number. So once again we've got some numbers. 13 plus 7 is 20, and 20 plus 4 is 24. So I just have to eliminate that 1. So I think I can go 4 divided by 1 is 4. So let's say 4 divided by 1, which is 4, and then we'll just add 7 and we'll add 13.","[1,4,7,13]",(4/1)+7+13,27,"start_state = (1, 4, 7, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+7+4=24"",
    resulting_state=(1, 24),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4/1=4"",
    resulting_state=(4, 7, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4+7+13=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 4, 7, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)


new_state = graph.explore_operation(
    curr_state,
    operation=""13+7=20"",
    resulting_state=(1, 4, 20),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""20+4=24"",
    resulting_state=(1, 24),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4/1=4"",
    resulting_state=(4, 7, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4+7+13"",
    resulting_state=(24,),
    comment="""",
)"
37," I have 12, 12, I have 3, and I have 5, and I have... How do you make it 24? 12 plus 12 is 24. Come on, now, why is it not... What if I take... Hello, yes, okay, I'm here, I'm still here. Let's say I take 12. I know. I divide it by 3. That will give me 4, right? So bracket, 12. 12, you can take 12. What if I take 12? Okay, let's say I take 12 minus 3. That is 9. And then 9 plus 12. Okay. Okay. Okay. Then let's take 12 minus 5. Let's say I take 12 minus 5, bracket is 12. 12 minus 5 minus... Plus... Sorry. That's true, I tell you, I tell you. Because this is not a lot, minus 3, right? Well, good. And then I will say another.","[3,5,12,12]",(12-3)+(5+12),180,"start_state = (3, 5, 12, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+12=24"",
    resulting_state=(3, 5, 24),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12/3=4"",
    resulting_state=(4, 5, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-3=9"",
    resulting_state=(5, 9, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+12=21"",
    resulting_state=(5, 21),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-5=7"",
    resulting_state=(7, 9),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(12-3)+(5+12)=26"",
    resulting_state=(26,),
    result_calc_error=False,
    comment='""""',
)","start_state = (3, 5, 12, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+12=24"",
    resulting_state=(3, 5, 24),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12/3=4"",
    resulting_state=(4, 5, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-3=9"",
    resulting_state=(9, 5, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+12=21"",
    resulting_state=(21, 5),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-5=7"",
    resulting_state=(3, 7, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-3=9"",
    resulting_state=(9, 7),
    comment="""",
)"
38," Alright, let's go. 13 times 12, plus 9, divided by, wait, oh man, 17, 17, plus 13, that's 85, 85, 9 times 12, that's 6 something, 9 times 12, 108, 108, minus 13, 12 times 9, I need some paper and a pencil, dude, 13 times 8, So, I'm going to put 4. I'm going to put 12. I'm going to put 72. I'm going to put 1 times 8. 9 times 8 is 72. 1 times 12 is 60. 13 times 12. 13 times 1. 13 times 1. 117. 117 minus 12 is 105.","[8,9,12,13]",13x9,180,"start_state = (8, 9, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*12+9=165"",
    resulting_state=(8, 165),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+9=17"",
    resulting_state=(12, 13, 17),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""17+13=30"",
    resulting_state=(12, 30),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*12=108"",
    resulting_state=(8, 13, 108),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""108-13=95"",
    resulting_state=(8, 95),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13*8=104"",
    resulting_state=(9, 12, 104),
    result_calc_error=False,
    comment='""""',
)

# could also be 12-8
new_state = graph.explore_operation(
    curr_state,
    operation=""13-9=4"",
    resulting_state=(4, 8, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*9=72"",
    resulting_state=(12, 13, 72),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(13-12)*8=8"",
    resulting_state=(8, 9),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*8=72"",
    resulting_state=(72,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(13-8)*12=60"",
    resulting_state=(9, 60),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*12=156"",
    resulting_state=(8, 9, 156),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*(9-8)=13"",
    resulting_state=(12, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*13=117"",
    resulting_state=(8, 12, 117),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""117-12=105"",
    resulting_state=(8, 105),
    result_calc_error=False,
    comment='""""',
)","start_state = (8, 9, 12, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(13*12)/9=17.33"",
    resulting_state=(8, 17.33),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+9=17"",
    resulting_state=(17, 12, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""17+13=30"",
    resulting_state=(30, 12),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9*12=108"",
    resulting_state=(8, 108, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""108-13=95"",
    resulting_state=(8, 95),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12*9=108"",
    resulting_state=(8, 108, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*8=104"",
    resulting_state=(104, 108),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-8=4"",
    resulting_state=(4, 9, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*9=72"",
    resulting_state=(72, 12, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(13-12)*8=8"",
    resulting_state=(8, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*9=72"",
    resulting_state=(72,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(13-8)*12=60"",
    resulting_state=(60, 9),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*12=156"",
    resulting_state=(8, 9, 156),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*(9-8)=13"",
    resulting_state=(13, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*9=117"",
    resulting_state=(8, 117, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""117-12=105"",
    resulting_state=(8, 105),
    comment="""",
)"
39," There's numbers on the screen, and this is an obnoxious study, and I don't want to take it anymore. 8 times 3.","[1,4,7,12]",(12/4)x(7+1),29,"start_state = (1, 4, 7, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(12/4)*(7+1)=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 4, 7, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

graph.set_subgoal(subgoal_state=(8, 3), state_after_subgoal=(24,), comment="""")"
40," no that no that yeah no that wouldn't be because then i was gonna say because then if you do plus seven you know and you add the two that's that's not going to be enough either so that wouldn't work um let's see well nine divided by three is three that's 15 though if you do that because i was gonna say and then no because you get and if you take away that would only give you 23 it wouldn't give you 24 if you do it that way because at first i was going to say you can do 9 minus the 3 which would be 6. even if you did that and then you times that by the two you know even if you times it by two that's only 12 plus seven is 19. that's not 24. But 7 times 3 is 21. And 9 divided by 2 would be 3. There you go. So do 7 times 3, which would be 21, right? And then do plus 9 divided by 2. What? Incorrect answer or not on number. How come that's not right? If not, 7 times 3 is 21, right? Plus 9 divided by 2. 9 divided by 2. Oh, because 9 divided by 2 is 21. Oh, because 9 divided by 2 is 21. Oh, because 9 divided by 2 is 21. Oh, because 9 divided by 2 is 21. Because 2 does not go into 9 evenly. That's why. Okay. So that would have worked if it would have been another 3.","[2,3,7,9]",(7x3),180,"start_state = (2, 3, 7, 9)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+3+7+2=21"",
    resulting_state=(21,),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(9/3)*(7-2)=15"",
    resulting_state=(15,),
    result_calc_error=False,
    comment='""""',
)

# not sure what gets you 23

new_state = graph.explore_operation(
    curr_state,
    operation=""9-3=6"",
    resulting_state=(2, 6, 7),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""2*6+7=19"",
    resulting_state=(19,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*3=21"",
    resulting_state=(2, 9, 21),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9/2=3"",
    resulting_state=(3, 21),
    result_calc_error=True,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""21+3=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (2, 3, 7, 9)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+3+7+2=21"",
    resulting_state=(21,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""9/3=3"",
    resulting_state=(2, 3, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*(7-2)=15"",
    resulting_state=(15,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*7+2=23"",
    resulting_state=(23,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9-3=6"",
    resulting_state=(2, 6, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*6=12"",
    resulting_state=(12, 7),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+7=19"",
    resulting_state=(19,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*3=21"",
    resulting_state=(2, 21, 9),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9/2=3"",
    resulting_state=(3, 21),
    result_calc_error=True,
    comment="""",
)"
41," The target number is 24. How about we try parentheses, 5, minus, 2, so that's 3. I'm going to try something different. How about 5. How about 5 plus 2. This is impossible to do. So that's 10. 10 plus 3. 5 plus 2 is 10 plus 3 is 13. How about 5 plus 3. How about 5 times 3 equals 15. Okay, 15 minus 2 equals 13. 5 times 3 is 15. Minus, I don't know how to do this. 5 plus 13. That's 18. 18 minus 2 is 16. 16. Nope. I'm going back to the drawing board. How about 13 minus 5. So that's 13 minus 5 which equals 1, 2, 3 equals 8. 13 minus 5 minus 2. That's 6 times 3. Okay, so 13 minus 5 is 8. 8.","[2,3,5,13]",(13-5-2)x3,180,"start_state = (2, 3, 5, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5-2=3"",
    resulting_state=(3, 3, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+2=7"",
    resulting_state=(3, 7, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*2=10"",
    resulting_state=(3, 10, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10+3=13"",
    resulting_state=(13, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5+3=8"",
    resulting_state=(2, 8, 13),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*3=15"",
    resulting_state=(2, 13, 15),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""15-2=13"",
    resulting_state=(13, 13),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5*3=15"",
    resulting_state=(2, 13, 15),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+13=18"",
    resulting_state=(2, 3, 18),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""18-2=16"",
    resulting_state=(3, 16),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13-5=8"",
    resulting_state=(2, 3, 8),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-5-2=6"",
    resulting_state=(3, 6),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*3=18"",
    resulting_state=(18,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13-5=8"",
    resulting_state=(2, 3, 8),
    result_calc_error=False,
    comment='""""',
)","start_state = (2, 3, 5, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5-2=3"",
    resulting_state=(3, 3, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+2=7"",
    resulting_state=(7, 3, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*2=10"",
    resulting_state=(10, 3, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10+3=13"",
    resulting_state=(13, 13),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+3=8"",
    resulting_state=(2, 8, 13),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""5*3=15"",
    resulting_state=(2, 15, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""15-2=13"",
    resulting_state=(13, 13),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""5+13=18"",
    resulting_state=(2, 3, 18),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""18-2=16"",
    resulting_state=(16, 3),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-5=8"",
    resulting_state=(2, 3, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8-2=6"",
    resulting_state=(6, 3),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""6*3=18"",
    resulting_state=(18,),
    comment="""",
)"
42," 1, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20. 19, oh, let's do, 10 was 8, that's 2, 2 times 12 is 24, times 1, 8, yeah, let's do 10 minus 8, let's do 10 minus 8, times 12, and","[1,8,10,12]",1x(10-8)x12,80,"start_state = (1, 8, 10, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+8=20"",
    resulting_state=(1, 10, 20),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""10-8=2"",
    resulting_state=(1, 2, 12),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12*2=24"",
    resulting_state=(1, 24),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""24*1=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 8, 10, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10-8=2"",
    resulting_state=(1, 2, 12),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""2*12=24"",
    resulting_state=(1, 24),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1*24=24"",
    resulting_state=(24,),
    comment="""",
)"
43," Let's see, 13 plus 13 equals 26 plus 3. Let's see, 13 times 3 equals 39 minus 13. Okay, so 13, 13, 9 and 3. Let's see, 13 minus 9 plus 13 minus 3. I think this is right. 13, 13 minus 9 plus 13 minus 3.","[3,9,13,13]",(13-9)+13(-3),293,"start_state = (3, 9, 13, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+13+3=29"",
    resulting_state=(9, 29),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(13*3)-13=26"",
    resulting_state=(9, 26),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-9+13-3=14"",
    resulting_state=(14,),
    result_calc_error=False,
    comment='""""',
)","start_state = (3, 9, 13, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13+13=26"",
    resulting_state=(3, 9, 26),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""26+3=29"",
    resulting_state=(29, 9),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13*3=39"",
    resulting_state=(39, 9, 13),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""39-13=26"",
    resulting_state=(26, 9),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""13-9+(13-3)=14"",
    resulting_state=(14,),
    comment="""",
)"
44," Okay, so now you have 11. If I did 11 plus 9, yep, that's easy. So do 11 plus 9, which gives me 20, plus 11, delete that, 11 minus 7 should get me 24.","[7,9,11,11]",(11+9)+(11-7),23,"start_state = (7, 9, 11, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(11+9)+(11-7)=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (7, 9, 11, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""11+9=20"",
    resulting_state=(7, 20, 11),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""20+11=31"",
    resulting_state=(7, 31),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""31-7=24"",
    resulting_state=(24,),
    comment="""",
)"
45," 24, 8 divided by 8, and that's 1, divided by 4, arguing 2, but I don't really need that. 12 divided by 4, that's 3, times 8 would do it, but I don't need that. 12 divided by 8, that's not it. This is a toughie. 12 divided by, that's 1 and a half. 8 plus 12, that's 20. 12 plus 8, that's 20. Plus. 8 minus 4. That way.","[4,8,8,12]",12+8+(8-4),81,"start_state = (4, 8, 8, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8/8=1"",
    resulting_state=(1, 4, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8/4=2"",
    resulting_state=(2, 8, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12/4=3"",
    resulting_state=(3, 8, 8),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*8=24"",
    resulting_state=(8, 24),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12/8=1.5"",
    resulting_state=(1.5, 4, 8),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+12=20"",
    resulting_state=(4, 8, 20),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""20+(8-4)=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (4, 8, 8, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8/8=1"",
    resulting_state=(4, 1, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8/4=2"",
    resulting_state=(2, 8, 12),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12/4=3"",
    resulting_state=(3, 8, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*8=24"",
    resulting_state=(24, 8),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12/8=1.5"",
    resulting_state=(4, 1.5, 8),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+12=20"",
    resulting_state=(4, 20, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""20+(8-4)=24"",
    resulting_state=(24,),
    comment="""",
)"
46," Alright, so, target number is 24, I'm down 7, 7, 11, 12, alright, so, 12 minus 11, 12 minus 11, 12 minus 11, times 7 plus 7. Let's see, nope, 12 minus 11 is 1, 1 times, I don't know. Add fortune, no, no. Add fortune. Now let's try it again, let's try it again. So, 11 11 minus 4 4 11 minus 2 4 use each number at once use each number at once and down 12 minus 7 12 minus 7 times 11 minus 7 let's see the answer oh no here's the clock clock here's the clock let's see the answer 7 7","[7,7,11,12]",,180,"start_state = (7, 7, 11, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-11=1"",
    resulting_state=(7, 7, 1),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""1*7+7=14"",
    resulting_state=(14,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12-11=1"",
    resulting_state=(1, 7, 7),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""11-7=4"",
    resulting_state=(4, 7, 12),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(12-7)*(11-7)=20"",
    resulting_state=(20,),
    result_calc_error=False,
    comment='""""',
)","start_state = (7, 7, 11, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12-11=1"",
    resulting_state=(7, 7, 1),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1*(7+7)=14"",
    resulting_state=(14,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(12-7)*(11-7)=20"",
    resulting_state=(20,),
    comment="""",
)"
47," Let's see about this one. Okay. So with this one we are having 7, 8, 8 and 12. So 7, 8, 8 and 12. How do we go about it? Okay. Let me think through. Let me think through. Let me think through. Let me think through. Okay. So I'll be thinking about maybe 12 plus 8. It's not working. It's not working. It's not working for me. It's not working. So I'm thinking about 12 times 8. That will be 96. So I'm thinking about 12 times 8. That will be 96. Okay. How about 8 times 7? Hmmmm. I'm still not working. 8 times 8. 8 times 8 is 34. 34. 12 times 7. minus 34. 96 is 24. 96 is 28. It's not working. It's not working. What do we do? It's not working. Thank you. It's really not working for me. It's really not working for me.","[7,8,8,12]",,180,"start_state = (7, 8, 8, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+8=20"",
    resulting_state=(7, 8, 20),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12*8=96"",
    resulting_state=(7, 8, 96),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*7=56"",
    resulting_state=(8, 12, 56),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*8=34"",
    resulting_state=(7, 12, 34),
    result_calc_error=True,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12*7=84"",
    resulting_state=(34, 84),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""84-34=50"",
    resulting_state=(50,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12*8=96"",
    resulting_state=(7, 8, 96),
    result_calc_error=False,
    comment='""""',
)","start_state = (7, 8, 8, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12+8=20"",
    resulting_state=(7, 20, 8),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""12*8=96"",
    resulting_state=(7, 96, 8),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*7=56"",
    resulting_state=(56, 96),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*8=34"",
    resulting_state=(7, 34, 12),
    result_calc_error=True,
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""12*7=84"",
    resulting_state=(84, 34),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""84-34=50"",
    resulting_state=(50,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""8*12=96"",
    resulting_state=(7, 96, 8),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""8+8+12=28"",
    resulting_state=(7, 28),
    comment="""",
)"
48," So you get 24. 10 times 3 is too high. You can get 7 times 3, 21. That's too low. 9 times 20. 3 times 3 is not. Plus 10 is not enough. 7 times 3. I already went over that. 6. 4. Times 7. No. 7. 4 minus 3 is 1. Okay. It's really hard to do math when I'm thinking out loud because I'm not sure. sophomores. Instead of having 1,000, I'm narrating. I'm not actually in my head that much. Okay. 6. 0. 6 times 3 is 18. No. How do I get 24? 8 times 3. Is there a way to get 8? 4. 6. Oh, no. 7. 8 times 3. Okay. 10 minus 3 plus 1 times 3. freshmen.","[1,3,3,10]",(10-3+1)x3,154,"start_state = (1, 3, 3, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*3=30"",
    resulting_state=(1, 3, 30),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(10-3)*3=21"",
    resulting_state=(1, 21),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(1, 9, 10),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+10=19"",
    resulting_state=(1, 19),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(10-3)*3=21"",
    resulting_state=(1, 21),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+3=6"",
    resulting_state=(1, 6, 10),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+1=4"",
    resulting_state=(3, 4, 10),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*(10-3)=28"",
    resulting_state=(28,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(3+1)-3=1"",
    resulting_state=(1, 10),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(10-3-1)*3=18"",
    resulting_state=(18,),
    result_calc_error=False,
    comment='""""',
)

graph.set_subgoal(subgoal_state=(8, 3), state_after_subgoal=(24,), comment='""""')

new_state = graph.explore_operation(
    curr_state,
    operation=""(10-3+1)*3=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (1, 3, 3, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""10*3=30"",
    resulting_state=(1, 30, 3),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(10-3)*3=21"",
    resulting_state=(1, 21),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""(3*3)*(1*10)=180"",
    resulting_state=(180,),
    result_calc_error=True,
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3*3=9"",
    resulting_state=(1, 9, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""9+10=19"",
    resulting_state=(1, 19),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(10-3)*3=21"",
    resulting_state=(1, 21),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+3=6"",
    resulting_state=(1, 6, 10),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+3=4"",
    resulting_state=(4, 3, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""4*(10-3)=28"",
    resulting_state=(28,),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""4-3=1"",
    resulting_state=(1, 10),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+3=6"",
    resulting_state=(1, 6, 10),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3-3=0"",
    resulting_state=(1, 0, 10),
    comment="""",
)

graph.set_subgoal(subgoal_state=(3, 8), state_after_subgoal=(24,), comment="""")

new_state = graph.explore_operation(
    curr_state,
    operation=""1+3=4"",
    resulting_state=(4, 3, 10),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""3+3=6"",
    resulting_state=(1, 6, 10),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""1+6=7"",
    resulting_state=(7, 10),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(10-3+1)*3=24"",
    resulting_state=(24,),
    comment="""",
)"
49," Target number 24, okay, this one's hard because it's, uh, 24, so 14, 14 and 8 is 22. Huh. Um, well, 8 times 3, oh, 8 times 3, so 7 minus 1, I mean 7 minus 4 is 3, and then, oof. I'm not really sure how I'm gonna get out of this one. Um, 7 minus 4 is 3, and then... I'm not sure. 7 minus 4, 3 times 8. Um, well, I'm not really sure what to do. So, I'm probably gonna need the 3 minutes to pass, because this one's hard. Mmm... 7 times 7 is 49, 49... 49, what's 49 minus 16? 33. Okay, this one, I am going to say... 7... times... 23... 4...","[4,4,7,7]",7x(4-(4/7)),167,"start_state = (4, 4, 7, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""(7+7)+(4+4)=22"",
    resulting_state=(22,),
    result_calc_error=False,
    comment='""""',
)

graph.set_subgoal(subgoal_state=(3, 8), state_after_subgoal=(24,), comment='""""')

new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(3, 4, 7),
    result_calc_error=False,
    comment='""""',
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*7=49"",
    resulting_state=(4, 4, 49),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""49-(4*4)=33"",
    resulting_state=(33,),
    result_calc_error=False,
    comment='""""',
)

curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*(4-(4/7))=24"",
    resulting_state=(24,),
    result_calc_error=False,
    comment='""""',
)","start_state = (4, 4, 7, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7+7=14"",
    resulting_state=(4, 4, 14),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""14+(4+4)=22"",
    resulting_state=(22,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

graph.set_subgoal(subgoal_state=(8, 3), state_after_subgoal=(24,), comment="""")

new_state = graph.explore_operation(
    curr_state,
    operation=""7-(4/4)=6"",
    resulting_state=(6, 7),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(3, 4, 7),
    comment="""",
)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*7=49"",
    resulting_state=(4, 4, 49),
    comment="""",
)

curr_state = graph.move_to_node(new_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""49-(4*4)=33"",
    resulting_state=(33,),
    comment="""",
)

curr_state = graph.move_to_node(start_state)

new_state = graph.explore_operation(
    curr_state,
    operation=""7*(4*4+7)=161"",
    resulting_state=(161,),
    comment="""",
)"
