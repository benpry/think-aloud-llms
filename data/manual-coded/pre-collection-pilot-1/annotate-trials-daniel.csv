rt,stimulus,response,trial_type,trial_index,time_elapsed,internal_node_id,run_id,condition,recorded_at,source_code_version,ip,user_agent,device,browser,browser_version,platform,platform_version,referer,accept_language,transcript,annotation,timestamp
45810,,,survey-text,1,82281,0.0-1.0-0.0,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7", 12 multiplied by 8 divided by 6 plus 2. 6 x 6 6 x 6 divided by 12 divided by Tiz.,"start_state = (6, 6, 8, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)
# 12 x 8 - participant is multiplying 12 by 8
new_state = graph.explore_operation(
    curr_state,
    operation=""12*8=96"",
    resulting_state=(6, 6, 96),
    comment=""12 x 8 - participant is multiplying 12 by 8"",
)
# 12 x 6 - participant is multiplying 12 by 6
new_state = graph.explore_operation(
    curr_state,
    operation=""12*6=72"",
    resulting_state=(6, 8, 72),
    comment=""12 x 6 - participant is multiplying 12 by 6"",
)
# plus 6 - participant is adding 6 to result
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""72+6=78"",
    resulting_state=(8, 78),
    comment=""plus 6 - participant is adding 6 to result"",
)
# six multiplied by six - participant returned to start state and is now trying 6*6
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*6=36"",
    resulting_state=(8, 12, 36),
    comment=""six multiplied by six - participant returned to start state and is now trying 6*6"",
)
# divided by 12 - looks like from result that participant is dividing 12 by 8
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12/8=1.5"",
    resulting_state=(1.5, 36),
    comment=""# divided by 12 - looks like from result that participant is dividing 12 by 8"",
)
# no further comment, but can see the division operation from result
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""36/1.5=24"",
    resulting_state=(24,),
    comment=""# no further comment, but can see the division operation from result"",
)",2025-01-07T06:45:41.047Z
18451,,,survey-text,2,100739,0.0-1.0-0.1,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Okay, 12 plus 9 is 21. 12 plus... let's see here... 9 plus 7 is 16. So, 6 plus 7, that's 13. So, 72 minus 9 times 6, which is 54. 72 minus 54... 9 times... 7 is 63 and 72... 9 times 6 is 54. 12... 12 times 7 minus 9 times 6. Could that be 72? No, that'd be 84 minus 54, which would be 30. So I can do 12 times 6 is 72, minus 9 times 7 is about 72 minus 6. That's still not right. About 12 minus 6. That's 2. Or 6. Plus 16. That sounds right. Plus 9 plus 7. 6 plus 16, that's 22. So what if it was 12 minus 7, that's 5. 9 plus 6 is 15, that's 20. So that's not right either. So it's 12 plus 9 is 21. That's not right. Minus 3.","start_state = (6, 7, 9, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)
# Okay, 12 plus 9 is 21
new_state = graph.explore_operation(
    curr_state,
    operation=""12+9=21"",
    resulting_state=(6, 7, 21),
    comment=""Okay, 12 plus 9 is 21"",
)
# 9 plus 7 is 16.
new_state = graph.explore_operation(
    curr_state,
    operation=""9+7=16"",
    resulting_state=(6, 12, 16),
    comment=""9 plus 7 is 16."",
)
# So 6 plus 7 is 13.
new_state = graph.explore_operation(
    curr_state,
    operation=""6+7=13"",
    resulting_state=(13, 9, 12),
    comment=""# So 6 plus 7 is 13. "",
)
# 12 times 6 is 54
new_state = graph.explore_operation(
    curr_state,
    operation="""",
    resulting_state=(7, 9, 54),
    comment=""12 times 6 is 54"",
)
# 12 x 7 minus 9 x 6, yeah, that's not correct... which would be 30
new_state = graph.explore_operation(
    curr_state,
    operation=""12*7 - 9*6 = 30"",
    resulting_state=(30,),
    comment=""# 12 x 7 minus 9 x 6, yeah, that's not correct... which would be 30"",
)
# that's not correct - indicates return to start_state
curr_state = graph.move_to_node(start_state)
# if we do 12 times 6 is. Plus 9 plus 7.
new_state = graph.explore_operation(
    curr_state,
    operation=""12*6+9+7= 88"",
    resulting_state=(88,),
    comment="""",
)
# 6 plus 16, that's 22 - indicates return to start
curr_state = graph.move_to_node(start_state)
# 6 plus 16, that's 22 - 16 comes from 9+7
new_state = graph.explore_operation(
    curr_state,
    operation=""9+7+6=22"",
    resulting_state=(22, 12),
    comment=""6 plus 16, that's 22 - 16 comes from 9+7"",
)
# So what if it was 12 minus 7, that's 5.
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12-7=5"",
    resulting_state=(5, 6, 9),
    comment=""So what if it was 12 minus 7, that's 5."",
)
# 9 plus 6 is 15. That's 20
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+6+5=20"",
    resulting_state=(20,),
    comment=""# 9 plus 6 is 15. That's 20"",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12+9=21"",
    resulting_state=(6, 7, 21),
    comment="""",
)
# That's not right. - moving to start state
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12-9=3"",
    resulting_state=(3, 6, 7),
    comment="""",
)",2025-01-07T06:45:59.505Z
12620,,,survey-text,3,113365,0.0-1.0-0.2,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7", We go on. 12 minus 5. 12 minus 7 which is 5. Times 7. It is at 5 minus 11. So print bracket 12 minus 7. Close the bracket right by 7. Subtract bracket 11.,"start_state = (7, 7, 11, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12-7=5"",
    resulting_state=(5, 7, 11),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5*7=35"",
    resulting_state=(11, 35),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""35-11=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:46:12.131Z
15015,,,survey-text,4,128386,0.0-1.0-0.3,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7", 1 plus 11 multiplied by 13 divided by 6 Eleven multiplied by thirteen plus one divided by six. Eleven multiplied by thirteen You will You will play a mathematical game where you start with a set of 4 numbers and have to,"start_state = (1, 6, 11, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)
# one close level - 11?
new_state = graph.explore_operation(
    curr_state,
    operation=""11*13= 143"",
    resulting_state=(1, 6, 143),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""143/6=23.83"",
    resulting_state=(1, 23.83),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""(11*13+1)/6=24"",
    resulting_state=(24,),
    comment="""",
)
# what happened here? ##CHECK RECORDING",2025-01-07T06:46:27.152Z
9929,,,survey-text,5,138320,0.0-1.0-0.4,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," 12, 9, 10, 11, 12, 13, 14, 15, 16, 17, plus 12, 9, 29, 12, 9, 18, 18, 19, and 12 times 2. Oh yeah. 9 minus 8 plus 1 times Open parenthesis, 12. All right. 1 times 12. Oh, no, I got to do 12 times 1. Plus 12. 9 minus 8 is 1. 9 minus 8 is 1. Plus 1. Times 2. 12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x m12 x 8, close parenthesis, plus 1, times 12. Okay. Plus 1, open parenthesis, times 12, close parenthesis.","start_state = (1, 8, 9, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)
# potentially trying to compute 8+9 - 9, 10, 11, 12, 13, 14, 15, 16, 17
new_state = graph.explore_operation(
    curr_state,
    operation=""8+9=17"",
    resulting_state=(1, 12, 17),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""17+12=29"",
    resulting_state=(1, 29),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
graph.set_subgoal(
    subgoal_state=(12, 2),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""9-8=1"",
    resulting_state=(1, 1, 12),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""1+1=2"",
    resulting_state=(2, 12),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""2*12=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:46:37.087Z
9641,,,survey-text,6,147967,0.0-1.0-0.5,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," 18, 19, 21, 22, 23, 24. 7, closed parenthesis, no, 18, 19, 20, 222, 420, okay, 5, 15, 20, 25, 30, 35, Minus 11, open parenthesis, 5, times 7, close parenthesis, minus, open parenthesis, 11, times 1, close parenthesis, 11, Climb in there.","start_state = (1, 5, 7, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+11=18"",
    resulting_state=(1, 5, 18),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5-1=4"",
    resulting_state=(18, 4),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""18+4=22"",
    resulting_state=(22,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
# 5, 10, 15, 20, 25, 30, 35 - computing 5*7
new_state = graph.explore_operation(
    curr_state,
    operation=""5*7=35"",
    resulting_state=(1, 11, 35),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""35-11*1=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:46:46.733Z
11935,,,survey-text,7,159907,0.0-1.0-0.6,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Okay, here's the same thing. 8 times 3 is already 24, so I can go. Yeah, these are easier. I'm pretty sure the first ones were unsolvable, or at least difficult. 8 times 3 plus 12 minus 12.","start_state = (3, 8, 12, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8*3=24"",
    resulting_state=(12, 12, 24),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""24+12-12=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:46:58.673Z
11411,,,survey-text,8,171323,0.0-1.0-0.7,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Alright, let's see. So 12 times 2 is 24, right off the bat. So we can go 8 minus 9, oh, wrong way. 9 minus 8, that's going to be 1. Times 12 plus 2, which would be 24. How the fuck did I not write? 1 times 20, oh, right. That's not the right. There we go.","start_state = (2, 8, 9, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12*2=24"",
    resulting_state=(8, 9, 24),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8-9=-1"",
    resulting_state=(-1, 24),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""9-8=1"",
    resulting_state=(1, 24),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""1*24=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:47:10.089Z
12285,,,survey-text,9,183614,0.0-1.0-0.8,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Target number 24. So we have 2, 2, 7, 7. And we need a multiple of 24. So it's going to be 2 times 2 is 4. 7 plus 7 is 14. So the highest if we add them all together is going to be 18, which means the multiplication has to be done here. So 7 times 2 is 14. And so I have 14, 7, and 2. If I multiply 7 times 2, that's 14, that's 28, too much. If I do 14 minus 7 plus 2, no. If I do 14 times 2, yes, that would work, but then I'd have an extra 7 left over. How could I solve that? 14 times 2 would be 28. I'd have an extra 7 left over. And that would not work. It would bring me back down to 21. Okay, let's do 7 plus 2, which is 9, which means I have 9, 7, and 2. 9 times 7 is 30. Wait, 9 times 7 is 63. That's too freaking much, girl. I So let's do 2 plus 2, which is 4. So I have 7, 7, 4. What's 4 times 7? 28. 4 times 7 is 28. And I have an extra 7 left over. How can I fix this problem? I'm thinking maybe there's a way to square them, or maybe I'm missing parentheses. No, no. Parentheses can come last. 7 minus 7 is 0, 7 minus 2 is 5, 10 times 2 is 10, plus 7 is 17, 7 times 2 is 14, plus 7 is 21, plus 2 is 23, no, 7 times 2 divided by, wait, 7 times 2, 14 divided by 7, Now is equal to.","start_state = (2, 2, 7, 7)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""2*2=4"",
    resulting_state=(4, 7, 7),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4+7+7=18"",
    resulting_state=(18,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*2=14"",
    resulting_state=(2, 7, 14),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*2+14=28"",
    resulting_state=(28,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*2-7+2=9"",
    resulting_state=(9,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*2*2=28"",
    resulting_state=(7, 28),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""28-7=21"",
    resulting_state=(21,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+2=9"",
    resulting_state=(2, 7, 9),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*7=63"",
    resulting_state=(2, 63),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*2+7+2=23"",
    resulting_state=(23,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""2+2=4"",
    resulting_state=(4, 7, 7),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*7=28"",
    resulting_state=(7, 28),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7-7=0"",
    resulting_state=(0, 2, 2),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""7-2=5"",
    resulting_state=(2, 5, 7),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5*2=10"",
    resulting_state=(10, 7),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10+7=17"",
    resulting_state=(17,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*2+7+2=23"",
    resulting_state=(23,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*2=14"",
    resulting_state=(2, 7, 14),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""14/7=2"",
    resulting_state=(2, 2),
    comment="""",
)",2025-01-07T06:47:22.380Z
76787,,,survey-text,10,260408,0.0-1.0-0.9,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Target number is 24, and we have 5, 5, 8, and 13. 8 plus 13 is 20-something. Let's do it a different way. 13 plus 5 is 3, 5, 6, 7, 8. 13 plus 5 is 18, so we have 18, 5, and 8. 8 minus 5, 5, 6, 7, 8 is 3. 18, 19, 20, 21. Dang it, it's 21, not 24. 18 plus 5 is 23. Hmm, this one might be harder. Okay, 5 plus 13. I mean, 5 plus 18 is 13. Then I'd have 13, 13, and 5. That's 26. Nope. Um, 5 times 5 is 25, 8, 13, um, 25 plus 8 maybe, 25, what is that, 35, I mean, 5, 6, 7, 8, 33 and 13, no, that would make 20. We subtracted those. Okay. 5 times 8, so that's going to give us 40, 13, and 5. 5 divided by 40 is 8, and then 8 plus 13 is 21. I keep getting 21. Okay, let's do it a different way. 5, 5, 8, 13, 13 times 5 is what? Um, 5 first and then 5 times 3 is 15. 5, 1, 5. Um, and then what if I divided that by 5 again? That would give me 13, 13, and 8, girl. Okay, um, let's change it up again. 5 plus 5. Um, 10 plus 18. I mean, plus 8. No, not going to work because that's 24. I mean, let's do 8 minus 5. That gives us 3. So now we have 13, 5, and 3, right? What if I did 3 times 15? No. Times 13? No. No, still doesn't work. Let's do another way. Okay, what about, okay, start again. 5, 5, 8,","start_state = (5, 5, 8, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+13=21"",
    resulting_state=(5, 5, 21),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""13+5=18"",
    resulting_state=(5, 8, 18),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8-5=3"",
    resulting_state=(3, 18),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""18+3=21"",
    resulting_state=(21,),
    comment="""",
)
curr_state = graph.move_to_node((5, 8, 18))
new_state = graph.explore_operation(
    curr_state,
    operation=""18+5=23"",
    resulting_state=(8, 23),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5+8=13"",
    resulting_state=(5, 13, 13),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13+13=25"",
    resulting_state=(5, 25),
    comment=""miscalculation"",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5*8=40"",
    resulting_state=(5, 13, 40),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""40/5=8"",
    resulting_state=(13, 8),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13+8=21"",
    resulting_state=(21,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5*13/5=13"",
    resulting_state=(13, 8),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5+5=10"",
    resulting_state=(10, 8, 13),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10+8=18"",
    resulting_state=(18, 13),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8-5=3"",
    resulting_state=(3, 5, 13),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*13=39"",
    resulting_state=(5, 39),
    comment="""",
)",2025-01-07T06:48:39.174Z
12179,,,survey-text,11,272594,0.0-1.0-0.10,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," I don't think my mind is registering what I need to do. . . . 7 plus 7 is 14, 4 times 8, 4, 8, 12, 16, 20, 24, 28, 32, 32 minus 14, no, 32 to 24 is going to be less than 10. Okay, 4 times 7, 4, 8, 12, 16, 20, 24, 28, 28, 7 and 8, 28, 7 and 8, 28, 7 and 8. 28, 7, 8, minus 8, 20, plus 7, 27, doesn't seem to be working. Let's do minus 8, minus 4, that's 477. 4 times 7, 4, 8, 12, 16, 20, 24, 28. Okay, let's see. Maybe I was onto something. 8 minus 4 is equal to 4. Leftover, I'll have 4. Wait, 8 minus 4, no more 4, no more 8. So, 4, 7, and 7. 7 plus 7 is 14. No, that doesn't work. 7 minus 4 is 3 times 7 is 21. No, 7 divided by 7, no, none of that works. I feel like I was onto something there. 7 minus 4 is equal to 4, 5, 6, 7, 3, 7 and 8, 21, 29, 7 times 8, excuse me, 3 times 8 is 24. Dang, I feel like I'm getting farther and farther away. I felt like I was super close a second ago, but I could have just done my math incorrectly. Let's go back to 8.","start_state = (4, 7, 7, 8)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*8=32"",
    resulting_state=(7, 7, 32),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""32-7=25"",
    resulting_state=(7, 25),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7/7=1"",
    resulting_state=(1, 4, 8),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*(8-1)=21"",
    resulting_state=(21,),
    comment="""",
)
curr_state = graph.move_to_node((1, 4, 8))
new_state = graph.explore_operation(
    curr_state,
    operation=""4*8=32"",
    resulting_state=(1, 32),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+7=14"",
    resulting_state=(14, 4, 8),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*8=32"",
    resulting_state=(14, 32),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""32-14=18"",
    resulting_state=(18,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*7=28"",
    resulting_state=(28, 7, 8),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""28-8=20"",
    resulting_state=(20, 7),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""20+7=27"",
    resulting_state=(27,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8-4=4"",
    resulting_state=(7, 7, 4),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*4=28"",
    resulting_state=(28, 7),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""7+7=14"",
    resulting_state=(4, 14),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(3, 7),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*7=21"",
    resulting_state=(21,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7/7=1"",
    resulting_state=(1, 4, 8),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""7-4=3"",
    resulting_state=(3, 7, 8),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""7*3=21"",
    resulting_state=(8, 21),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""8*3=24"",
    resulting_state=(7, 24),
    comment="""",
)",2025-01-07T06:48:51.360Z
10889,,,survey-text,12,283489,0.0-1.0-0.11,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Number 24! Let's see... Target number is 24... Umm... 11, 9, 3, 3... Let's see... Let's give it a try. 3 times 9, open parenthesis, 3 times 9, close parenthesis, minus 3. 3 times 9 is 27. 9 divided by 3 times 4 is 24. 9 divided by 3 times 4 is 24. 9 divided by 3 is 4.","start_state = (3, 3, 9, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*9=27"",
    resulting_state=(3, 27, 11),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""27-3=24"",
    resulting_state=(11, 24),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3/11=3/11"",
    resulting_state=(3 / 11, 3, 9),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*9=27"",
    resulting_state=(27, 3, 11),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""27-3=24"",
    resulting_state=(11, 24),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9/3=3"",
    resulting_state=(3, 3, 11),
    comment="""",
)
graph.set_subgoal(
    subgoal_state=(3, 4),
    state_after_subgoal=(24,),
    comment="""",
)",2025-01-07T06:49:02.255Z
42595,,,survey-text,13,326089,0.0-1.0-0.12,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Continue. All right, so let's see. If we go 9 plus 9, that's 18. And this is another 8. 18. Let's see, that's not right. So if we go 9 times 3, that's 27. Minus 9 would be 18, plus 5, that's 23, so that's 9. If we go... Minus 5 is 4. Minus 3 is 1 times 9. 5 times 3 is 15, plus 9. So if we go 5 times 3 plus 9, that'd be 24. Then you have this 9 floating here. If you have 9 divided by 3, that's 3. Oh, I think I figured it out. So you've got 9 divided by 3, which is 3, plus 5, which is 8, plus 9, that's only 17. 9 plus 9, that's 18, minus 18 plus 8, 9 minus 3, that's 6.","start_state = (3, 5, 9, 9)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+9=18"",
    resulting_state=(3, 5, 18),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3+5=8"",
    resulting_state=(8, 18),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9*3=27"",
    resulting_state=(5, 9, 27),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""27-9=18"",
    resulting_state=(5, 18),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""18+5=23"",
    resulting_state=(23,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9-5=4"",
    resulting_state=(3, 4, 9),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""5*3=15"",
    resulting_state=(15, 9, 9),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""15+9=24"",
    resulting_state=(24, 9),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9/3=3"",
    resulting_state=(3, 5, 9),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3+5=8"",
    resulting_state=(8, 9),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+9=17"",
    resulting_state=(17,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9+9=18"",
    resulting_state=(3, 5, 18),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""18+3+5=26"",
    resulting_state=(26,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""9-3=6"",
    resulting_state=(5, 6, 9),
    comment="""",
)",2025-01-07T06:49:44.855Z
6941,,,survey-text,14,333036,0.0-1.0-0.13,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Are you kidding me, dude? This is supposed to be 3 trials, this is like 6. This doesn't even make any freaking sense, dude. 12 plus 11 plus 6 plus 6, right? That means that I'm literally, literally, literally at 35. If I subtract a 6, that puts me at 23. 66 minus 12 is 52. It seems to be 54. Divided by, what's 24 times 6? It's 144. Can I get to 144? 11 times 12 is 132. Plus 6 is 138. Divided by 6. 11 times 12 is 132. Plus 6 is 138 divided by 6. 138 divided by 6 is 23. Hang on. I don't even know what to… I'm not even sure how to even get to this problem dude. Okay, 6 times 6 is 36. 6 times 6 is 36. Plus 12 or minus 12 is 24. But then I just can't get rid of this 11. 6 plus 6 minus 11 is 25. 6 minus 6 is 0. 11 plus 12 is 23, so of course I'm sure it's 1. 12 plus 6 is 18, plus 11 is 29, minus 6 is 23. 12 plus 6 is 18. Dude, I don't know. 6, I've already tried 6 times 6, I've tried 11 times 12. 6 times 11, so like the multiplication doesn't add up for me, or the addition. 12 plus 6 is 18. 12 plus 11 is 23. 12 plus 6 is 18, plus 6 is 24.","start_state = (6, 6, 11, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*11=66"",
    resulting_state=(6, 66, 12),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""66-12=54"",
    resulting_state=(54, 6),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
graph.set_subgoal(
    subgoal_state=(144, 6),
    state_after_subgoal=(24,),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""11*12+6=138"",
    resulting_state=(138, 6),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""138/6=23"",
    resulting_state=(23,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*6=36"",
    resulting_state=(36, 11, 12),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""36-12=24"",
    resulting_state=(11, 24),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""36-11=25"",
    resulting_state=(12, 25),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6-6=0"",
    resulting_state=(0, 11, 12),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+12=23"",
    resulting_state=(0, 23),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12+6=18"",
    resulting_state=(6, 11, 18),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""12+11=23"",
    resulting_state=(6, 6, 23),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""12+6=18"",
    resulting_state=(6, 11, 18),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""18+6=24"",
    resulting_state=(24, 11),
    comment="""",
)",2025-01-07T06:49:51.802Z
11144,,,survey-text,15,344186,0.0-1.0-0.14,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," . . . Okay, so 13, nope, delete. 13, nope, minus 13. Plus 11, plus 13.","start_state = (11, 13, 13, 13)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13+13+13+11=50"",
    resulting_state=(50,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""13+11+13=37"",
    resulting_state=(37, 13),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""37-13=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:50:02.952Z
9549,,,survey-text,16,353740,0.0-1.0-0.15,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," For example, 10 times 11 is 16. 5 x 10 is 50, 5 x 10 is 50, 5 x 10 is 50, 5 x 10 is 50, 5 x 10 is 50, 5 x 10 is 50, 5 x 10 is 50, 4 times 10 is 14. Number minus 5 is 6 plus 10 plus 10 is 6. 2 plus 10 is 11. That's 23. Let me see. Ten times 11.","start_state = (5, 10, 10, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10*11=110"",
    resulting_state=(110, 10, 5),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+5=16"",
    resulting_state=(10, 10, 16),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""11-5=6"",
    resulting_state=(6, 10, 10),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""10+10=20"",
    resulting_state=(5, 11, 20),
    comment="""",
)
# LISTEN TO RECORDING",2025-01-07T06:50:12.506Z
8990,,,survey-text,17,362736,0.0-1.0-0.16,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Target number 24. 8 plus 8 is 16. 16, 17, 18, 19, 20, 16, 8 plus 8 plus 11 minus 4. You play 16, 26, open parenthesis 8 plus 8 close parenthesis plus 11 is 26 Close parentheses, 11 minus 4. Close parentheses, that is 26. 16, 17, 18, 19, 20, 22, 23, 24, and that's 12. Plus 8, 12, 13, 14, 15, 16, 17, 18, 19. Close parenthesis. 12, 13, 14, 15, 16, 17, 18, 19. Minus 4. Plus, open parenthesis, 8 minus 4. Alright, 11 plus 8.","start_state = (4, 8, 8, 11)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+8=16"",
    resulting_state=(16, 4, 11),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""16+11-4=26"",
    resulting_state=(26,),
    comment=""miscalculation"",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""11+8=20"",
    resulting_state=(4, 8, 20),
    comment=""miscalculation, thought it was 20"",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""20+8-4=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:50:21.502Z
9861,,,survey-text,18,372602,0.0-1.0-0.17,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," 6, 8, 12, 12. 12 minus 12, no. 8 minus 6, 2. This one must work also. 12 minus 8. Let's see. Ah, yeah, yeah, yeah. 12 times 8, put the broker finals into broker 12, times 6,","start_state = (6, 8, 12, 12)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12-12=0"",
    resulting_state=(6, 8, 0),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""12-8=4"",
    resulting_state=(4, 6, 12),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""12*8=96"",
    resulting_state=(96, 12, 6),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""96-(12*6)=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:50:31.368Z
12790,,,survey-text,19,385398,0.0-1.0-0.18,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7", 5 multiplied by 9 divided by 3 plus 9.,"start_state = (3, 5, 9, 9)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""5*9/3=15"",
    resulting_state=(15, 9),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""15+9=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:50:44.165Z
10735,,,survey-text,20,396140,0.0-1.0-0.19,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, so 6 times 4. 6 times 4 is 24. 9 minus 6 is 3. 9-6 times 4 times 2","start_state = (2, 4, 6, 9)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*2=12"",
    resulting_state=(12, 4, 9),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""6*4=24"",
    resulting_state=(24, 9, 2),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""9-4=5"",
    resulting_state=(2, 5, 6),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""9-6=3"",
    resulting_state=(2, 4, 3),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*4=12"",
    resulting_state=(12, 2),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*(4*2)=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:50:54.906Z
8925,,,survey-text,21,405070,0.0-1.0-0.20,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Okay, you've got to be kidding me here. Minus 3 is 29. Divided by 3, no, divided by 8 is 5. Dude, 10 times 8 plus, oh no. I do not know. I've been saying my thoughts out loud this entire time, dude. I can't take a break or pause. This is actually heating me up, dude. I need help. 3 plus 4, I'm already done. 8 plus 10 is 18, which makes no sense. 3 times 4 is 15 times 8 times 2.","start_state = (3, 4, 8, 10)
curr_state = start_state
graph = GraphBuilder(curr_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10+8+4+3=25"",
    resulting_state=(25,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""4*3=12"",
    resulting_state=(12, 8, 10),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12+8+10=30"",
    resulting_state=(30,),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""10*8=80"",
    resulting_state=(3, 4, 80),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""10*4=40"",
    resulting_state=(40, 8, 3),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""40-8-3=29"",
    resulting_state=(29,),
    comment="""",
)
curr_state = graph.move_to_node((40, 8, 3))
new_state = graph.explore_operation(
    curr_state,
    operation=""40/3=13.33"",
    resulting_state=(13.33, 8),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""40/8=5"",
    resulting_state=(5, 3),
    comment="""",
)
curr_state = graph.move_to_node(start_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""3+4=7"",
    resulting_state=(7, 8, 10),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""8+10=18"",
    resulting_state=(18, 3, 4),
    comment="""",
)
new_state = graph.explore_operation(
    curr_state,
    operation=""3*4=12"",
    resulting_state=(12, 8, 10),
    comment="""",
)
curr_state = graph.move_to_node(new_state)
new_state = graph.explore_operation(
    curr_state,
    operation=""12*(10-8)=24"",
    resulting_state=(24,),
    comment="""",
)",2025-01-07T06:51:03.836Z
5540,,,survey-text,22,410615,0.0-1.0-0.21,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Okay, oh this is easy. 1, 2, 3, and 8. 1, 2, 3, and 8. So this, I know we're going to go, uh, let's see. 1, 2, 3, and 8. So I'm going to do 2 times my parentheses. 1 plus 8 parentheses plus 3 parentheses.","start_state = [1,2,3,8]
curr_state = start_state
graph = GraphBuilder(curr_state)",2025-01-07T06:51:09.381Z
2396,,,survey-text,23,413017,0.0-1.0-0.22,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," This is 10, this is 3, this is 5, 15, no, 5 divided by 5, 5 times 5 is 5, 8 minus 5 is 3, so it's 6. This is quite taxing. So, 15 x 10 x 5 x 10 x 5 x 10 x 5 x 10 x 5 If they're still, they're his. Let's replace 1, 2, 3, 4.","start_state = [5,5,8,13]
curr_state = start_state
graph = GraphBuilder(curr_state)",2025-01-07T06:51:11.783Z
878,,,survey-text,24,413901,0.0-1.0-0.23,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Okay, we have 2, 3, 5, and 10. 2 times 3 plus... Okay, so we start by 2. Times 3, okay, okay, okay Delete, delete 2 Times 3 minus No, no, no, no, no, no, no, no, no, no. into bracket two plus three what is that? I get it. Delete, delete, delete, delete.","start_state = [2,3,5,10]
curr_state = start_state
graph = GraphBuilder(curr_state)",2025-01-07T06:51:12.667Z
687,,,survey-text,25,414595,0.0-1.0-0.24,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," 4 times 6 is 24. It's Oh no, oh no, oh no, I don't know. Ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, ok, Let's see. Let's see. Let's see. Let's see.","start_state = [2,4,6,13]
curr_state = start_state
graph = GraphBuilder(curr_state)",2025-01-07T06:51:13.361Z
731,,,survey-text,26,415332,0.0-1.0-0.25,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," 9 plus 6 is 15? 15 plus 4 plus 2. 4 times 2 is 8. 9 plus 6 plus 8 is 23. 12 6 times 2 is 12 plus 9 plus 4 is 25. 9 times 2 is 18. 18 plus 4 plus 6 is 28. Okay, so I need to do some type of more multiplication. 9 times 654 divided by 8 is 645. That's not right, is it? 9 times 4 is 36 minus 6 minus 2 is 28. 9 times 2 plus 6. Times 4. 6 minus 2. 4 plus 16 plus 9 is 25? Are you serious? 6 minus 2 times 4 plus 9. 6 minus... Is it 9? Maybe 9 minus 6. 4 times 2. 9 minus 6 is 3. 4 plus 2 times 6. 6 times 6 is 36. What is 9? No, it puts you at 27. What was multiple?","start_state = [2,4,6,9]
curr_state = start_state
graph = GraphBuilder(curr_state)",2025-01-07T06:51:14.098Z
695,,,survey-text,27,416033,0.0-1.0-0.26,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," Alright, 12 divided by 6 is 2, times 8 is 16. So if we do 8 times 12 divided by 2, that's 16, plus 6 is 24. 8 times 12 divided by 6 is 16 plus 6. How does that mount? 12 divided by 6 is 2 times 8 plus 6. Oh, I'm talking only. All right. We have 12 divided by 8 is 4. 12 divided by 8, that's 4. Times 6, that's 24. So that's not right. So it's 12 divided by 6 plus 8 plus 6. I feel like some of these are designed not to work. Because 12 divided by 6 is 2. Times 8 is 16. That's 22. So I was wrong the entire time. So 6 times 6 is 36. 6 times 6 is 36. Oops. Times 6 is 36 minus","start_state = [6,6,8,12]
curr_state = start_state
graph = GraphBuilder(curr_state)",2025-01-07T06:51:14.799Z
776,,,survey-text,28,416812,0.0-1.0-0.27,14,6,2025-01-07 06:44:18,fa36d76c4699a627e33a91273f083d6e,,"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",Macintosh,Chrome,131.0.0.0,OS X,10_15_7,,"en-US,en;q=0.7"," 9 plus 9 is 18. 19, 20, 22, 23, 24. Open parenthesis. 9 plus... I don't even need to do all that. 9 plus 9 plus 3 plus 3.","start_state = [3,3,9,9]
curr_state = start_state
graph = GraphBuilder(curr_state)",2025-01-07T06:51:15.578Z
